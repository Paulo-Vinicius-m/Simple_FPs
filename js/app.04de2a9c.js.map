{"version":3,"file":"js/app.04de2a9c.js","mappings":"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","sources":["webpack://simple_fpa/./src/App.vue?772e","webpack://simple_fpa/./src/App.vue","webpack://simple_fpa/./src/components/LogicalFiles.vue?f3a3","webpack://simple_fpa/./src/components/LogicalFiles.vue","webpack://simple_fpa/./src/assets/ts/LogicalFileFinder.ts","webpack://simple_fpa/./src/components/LogicalFiles.vue?8e33","webpack://simple_fpa/./src/components/ElementaryProcesses.vue?9327","webpack://simple_fpa/./src/components/ElementaryProcesses.vue","webpack://simple_fpa/./src/components/ElementaryProcesses.vue?b154","webpack://simple_fpa/./src/App.vue?7ccd","webpack://simple_fpa/./src/registerServiceWorker.ts","webpack://simple_fpa/./src/main.ts","webpack://simple_fpa/webpack/bootstrap","webpack://simple_fpa/webpack/runtime/chunk loaded","webpack://simple_fpa/webpack/runtime/compat get default export","webpack://simple_fpa/webpack/runtime/define property getters","webpack://simple_fpa/webpack/runtime/global","webpack://simple_fpa/webpack/runtime/hasOwnProperty shorthand","webpack://simple_fpa/webpack/runtime/jsonp chunk loading","webpack://simple_fpa/webpack/startup"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = { class: \"app-main\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"debug-section\"\n}\nconst _hoisted_4 = { class: \"app-footer\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_LogicalFiles = _resolveComponent(\"LogicalFiles\")!\n  const _component_ElementaryProcesses = _resolveComponent(\"ElementaryProcesses\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[3] || (_cache[3] = _createElementVNode(\"header\", { class: \"app-header\" }, [\n      _createElementVNode(\"h1\", null, \"Function Point Analysis Tool\"),\n      _createElementVNode(\"p\", null, \"Manage and analyze logical files for your software projects\")\n    ], -1)),\n    _createElementVNode(\"main\", _hoisted_2, [\n      _createVNode(_component_LogicalFiles, {\n        FPA: _ctx.fpaInstance,\n        refreshTrigger: _ctx.refreshCounter,\n        onReadSQL: _ctx.handleLogicalFilesUpdate\n      }, null, 8, [\"FPA\", \"refreshTrigger\", \"onReadSQL\"]),\n      _createVNode(_component_ElementaryProcesses, {\n        FPA: _ctx.fpaInstance,\n        onReadSQL: _ctx.handleLogicalFilesUpdate\n      }, null, 8, [\"FPA\", \"onReadSQL\"]),\n      (_ctx.showDebugInfo)\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [\n            _cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Debug Information\", -1)),\n            _createElementVNode(\"details\", null, [\n              _createElementVNode(\"summary\", null, \"Current Logical Files (\" + _toDisplayString(_ctx.currentLogicalFiles.length) + \")\", 1),\n              _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify(_ctx.currentLogicalFiles, null, 2)), 1)\n            ]),\n            _createElementVNode(\"details\", null, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"summary\", null, \"Component State\", -1)),\n              _createElementVNode(\"ul\", null, [\n                _createElementVNode(\"li\", null, \"Refresh Counter: \" + _toDisplayString(_ctx.refreshCounter), 1),\n                _createElementVNode(\"li\", null, \"Last Update: \" + _toDisplayString(_ctx.lastUpdateTime), 1),\n                _createElementVNode(\"li\", null, \"Total Attributes: \" + _toDisplayString(_ctx.totalAttributes), 1)\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"footer\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.toggleDebugInfo && _ctx.toggleDebugInfo(...args))),\n        class: _normalizeClass([\"debug-toggle\", { active: _ctx.showDebugInfo }])\n      }, _toDisplayString(_ctx.showDebugInfo ? 'Hide' : 'Show') + \" Debug Info \", 3)\n    ])\n  ]))\n}","<!--\n  Example usage of the refactored LogicalFiles component\n  This file demonstrates best practices for integrating the component\n-->\n<template>\n  <div id=\"app\">\n    <header class=\"app-header\">\n      <h1>Function Point Analysis Tool</h1>\n      <p>Manage and analyze logical files for your software projects</p>\n    </header>\n\n    <main class=\"app-main\">\n      <!-- LogicalFiles Component Usage -->\n      <LogicalFiles \n        :FPA=\"fpaInstance\" \n        :refreshTrigger=\"refreshCounter\"\n        @readSQL=\"handleLogicalFilesUpdate\" \n      />\n\n      <ElementaryProcesses \n        :FPA=\"fpaInstance\" \n        @readSQL=\"handleLogicalFilesUpdate\"\n      />\n\n      <!-- Debug Information (Remove in production) -->\n      <section v-if=\"showDebugInfo\" class=\"debug-section\">\n        <h2>Debug Information</h2>\n        <details>\n          <summary>Current Logical Files ({{ currentLogicalFiles.length }})</summary>\n          <pre>{{ JSON.stringify(currentLogicalFiles, null, 2) }}</pre>\n        </details>\n        <details>\n          <summary>Component State</summary>\n          <ul>\n            <li>Refresh Counter: {{ refreshCounter }}</li>\n            <li>Last Update: {{ lastUpdateTime }}</li>\n            <li>Total Attributes: {{ totalAttributes }}</li>\n          </ul>\n        </details>\n      </section>\n    </main>\n\n    <footer class=\"app-footer\">\n      <button \n        @click=\"toggleDebugInfo\" \n        class=\"debug-toggle\"\n        :class=\"{ active: showDebugInfo }\"\n      >\n        {{ showDebugInfo ? 'Hide' : 'Show' }} Debug Info\n      </button>\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, watch } from 'vue';\nimport LogicalFiles from './components/LogicalFiles.vue';\nimport ElementaryProcesses from './components/ElementaryProcesses.vue';\nimport { FPAnalysis } from './assets/ts/LogicalFileFinder';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    LogicalFiles,\n    ElementaryProcesses\n  },\n  setup() {\n    // Initialize FPA instance\n    const fpaInstance = new FPAnalysis();\n    \n    // Component state\n    const refreshCounter = ref(0);\n    const lastUpdateTime = ref<string>('');\n    const showDebugInfo = ref(false);\n\n    // Computed properties for debugging\n    const currentLogicalFiles = computed(() => {\n      return fpaInstance.getLFs();\n    });\n\n    const totalAttributes = computed(() => {\n      return currentLogicalFiles.value.reduce((total, lf) => {\n        return total + lf.dataElements.length;\n      }, 0);\n    });\n\n    // Event handlers\n    const handleLogicalFilesUpdate = (): void => {\n      console.log('Logical files updated:', currentLogicalFiles.value);\n      lastUpdateTime.value = new Date().toLocaleTimeString();\n      refreshCounter.value++;\n    };\n\n    const toggleDebugInfo = (): void => {\n      showDebugInfo.value = !showDebugInfo.value;\n    };\n\n    // Sample data for testing (optional)\n    const loadSampleData = (): void => {\n      const sampleSQL = `\n        CREATE TABLE IF NOT EXISTS \"Users\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"username\" TEXT NOT NULL,\n            \"email\" TEXT NOT NULL,\n            \"created_at\" DATETIME DEFAULT CURRENT_TIMESTAMP,\n            PRIMARY KEY(\"id\")\n        );\n        \n        CREATE TABLE IF NOT EXISTS \"Posts\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"user_id\" INTEGER NOT NULL,\n            \"title\" TEXT NOT NULL,\n            \"content\" TEXT,\n            \"published\" BOOLEAN DEFAULT FALSE,\n            \"created_at\" DATETIME DEFAULT CURRENT_TIMESTAMP,\n            PRIMARY KEY(\"id\"),\n            FOREIGN KEY(\"user_id\") REFERENCES \"Users\"(\"id\")\n        );\n      `;\n      \n      fpaInstance.readSQL(sampleSQL);\n      handleLogicalFilesUpdate();\n    };\n\n    // Watch for changes in logical files\n    watch(currentLogicalFiles, (newFiles, oldFiles) => {\n      console.log('Logical files changed:', {\n        previous: oldFiles?.length || 0,\n        current: newFiles.length,\n        difference: newFiles.length - (oldFiles?.length || 0)\n      });\n    }, { deep: true });\n\n    // Component lifecycle\n    onMounted(() => {\n      console.log('App component mounted');\n      // Uncomment to load sample data on startup\n      // loadSampleData();\n    });\n\n    return {\n      // Core functionality\n      fpaInstance,\n      refreshCounter,\n      handleLogicalFilesUpdate,\n      \n      // Debug features\n      showDebugInfo,\n      toggleDebugInfo,\n      currentLogicalFiles,\n      totalAttributes,\n      lastUpdateTime,\n      \n      // Utilities\n      loadSampleData\n    };\n  }\n});\n</script>\n\n<style>\n/* Global App Styles */\n#app {\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.app-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 2rem;\n  text-align: center;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.app-header h1 {\n  margin: 0 0 0.5rem 0;\n  font-size: 2.5rem;\n  font-weight: 700;\n}\n\n.app-header p {\n  margin: 0;\n  font-size: 1.2rem;\n  opacity: 0.9;\n}\n\n.app-main {\n  flex: 1;\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.debug-section {\n  margin-top: 3rem;\n  padding: 1.5rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #dee2e6;\n}\n\n.debug-section h2 {\n  margin-top: 0;\n  color: #495057;\n}\n\n.debug-section details {\n  margin: 1rem 0;\n  background: white;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n}\n\n.debug-section summary {\n  padding: 1rem;\n  cursor: pointer;\n  background: #f8f9fa;\n  border-radius: 4px 4px 0 0;\n  font-weight: 500;\n}\n\n.debug-section summary:hover {\n  background: #e9ecef;\n}\n\n.debug-section pre {\n  padding: 1rem;\n  margin: 0;\n  background: #f8f9fa;\n  border-radius: 0 0 4px 4px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n}\n\n.debug-section ul {\n  padding: 1rem;\n  margin: 0;\n  list-style: none;\n}\n\n.debug-section li {\n  padding: 0.25rem 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.debug-section li:last-child {\n  border-bottom: none;\n}\n\n.app-footer {\n  padding: 1rem;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.debug-toggle {\n  padding: 0.5rem 1rem;\n  background: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.debug-toggle:hover {\n  background: #5a6268;\n  transform: translateY(-1px);\n}\n\n.debug-toggle.active {\n  background: #007bff;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .app-header {\n    padding: 1.5rem 1rem;\n  }\n  \n  .app-header h1 {\n    font-size: 2rem;\n  }\n  \n  .app-header p {\n    font-size: 1rem;\n  }\n  \n  .app-main {\n    padding: 1rem;\n  }\n}\n\n/* Dark mode support */\n@media (prefers-color-scheme: dark) {\n  .debug-section {\n    background: #343a40;\n    border-color: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section h2 {\n    color: #f8f9fa;\n  }\n  \n  .debug-section details {\n    background: #495057;\n    border-color: #6c757d;\n  }\n  \n  .debug-section summary {\n    background: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section summary:hover {\n    background: #6c757d;\n  }\n  \n  .debug-section pre {\n    background: #343a40;\n    color: #f8f9fa;\n  }\n}\n</style>\n","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"logical-files-container\" }\nconst _hoisted_2 = { class: \"sql-parser-section\" }\nconst _hoisted_3 = { class: \"input-group\" }\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = { class: \"logical-files-section\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"no-files-message\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"logical-files-grid\"\n}\nconst _hoisted_8 = {\n  colspan: \"3\",\n  class: \"table-title\"\n}\nconst _hoisted_9 = { class: \"dataElement-name\" }\nconst _hoisted_10 = { class: \"dataElement-type\" }\nconst _hoisted_11 = { class: \"dataElement-actions\" }\nconst _hoisted_12 = [\"onClick\", \"title\"]\nconst _hoisted_13 = { class: \"add-dataElement-row\" }\nconst _hoisted_14 = [\"onUpdate:modelValue\"]\nconst _hoisted_15 = [\"onUpdate:modelValue\"]\nconst _hoisted_16 = [\"onClick\", \"disabled\"]\nconst _hoisted_17 = { class: \"add-logical-file-section\" }\nconst _hoisted_18 = { class: \"form-actions\" }\nconst _hoisted_19 = [\"disabled\"]\nconst _hoisted_20 = { class: \"logical-file-table\" }\nconst _hoisted_21 = {\n  colspan: \"3\",\n  class: \"table-title\"\n}\nconst _hoisted_22 = { class: \"data-element-name\" }\nconst _hoisted_23 = { class: \"data-element-type\" }\nconst _hoisted_24 = { class: \"data-element-actions\" }\nconst _hoisted_25 = [\"onClick\", \"title\"]\nconst _hoisted_26 = { class: \"add-data-element-row\" }\nconst _hoisted_27 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"SQL Parser\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"textarea\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.sqlInput) = $event)),\n          class: \"sql-input\",\n          placeholder: \"Copy your SQL code here...\",\n          rows: \"4\"\n        }, null, 512), [\n          [_vModelText, _ctx.sqlInput]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.parseSQL && _ctx.parseSQL(...args))),\n          class: \"primary-button\",\n          disabled: !_ctx.sqlInput.trim()\n        }, \" Find Logical Files \", 8, _hoisted_4)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_5, [\n      _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"Logical Files\", -1)),\n      (!_ctx.logicalFiles.length)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[8] || (_cache[8] = [\n            _createElementVNode(\"p\", null, \"No logical files found. Parse SQL code or add files manually.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n              return (_openBlock(), _createElementBlock(\"table\", {\n                key: lf.name,\n                class: \"logical-file-table\"\n              }, [\n                _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", _hoisted_8, _toDisplayString(lf.name), 1)\n                  ]),\n                  _cache[9] || (_cache[9] = _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n                  ], -1))\n                ]),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lf.dataElements, (dataElement) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: dataElement.name,\n                      class: \"dataElement-row\"\n                    }, [\n                      _createElementVNode(\"td\", _hoisted_9, _toDisplayString(dataElement.name), 1),\n                      _createElementVNode(\"td\", _hoisted_10, _toDisplayString(dataElement.dtype), 1),\n                      _createElementVNode(\"td\", _hoisted_11, [\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (_ctx.removeDataElementFromLogicalFile(lf.name, dataElement.name)),\n                          class: \"danger-button small-button\",\n                          title: `Remove ${dataElement.name} from ${lf.name}`\n                        }, \" Remove \", 8, _hoisted_12)\n                      ])\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", _hoisted_13, [\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.newDataElements[lf.name].name) = $event),\n                        type: \"text\",\n                        class: \"dataElement-input\",\n                        placeholder: \"Data Element Name\",\n                        maxlength: \"50\"\n                      }, null, 8, _hoisted_14), [\n                        [_vModelText, _ctx.newDataElements[lf.name].name]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.newDataElements[lf.name].dtype) = $event),\n                        type: \"text\",\n                        class: \"dataElement-input\",\n                        placeholder: \"Data Element Type\",\n                        maxlength: \"30\"\n                      }, null, 8, _hoisted_15), [\n                        [_vModelText, _ctx.newDataElements[lf.name].dtype]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (_ctx.addDataElementToLogicalFile(lf.name, _ctx.newDataElements[lf.name])),\n                        class: \"success-button small-button\",\n                        disabled: !_ctx.newDataElements[lf.name]?.name?.trim() || !_ctx.newDataElements[lf.name]?.dtype?.trim(),\n                        title: \"Add new data element\"\n                      }, \" Add \", 8, _hoisted_16)\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n    ]),\n    _createElementVNode(\"section\", _hoisted_17, [\n      _cache[12] || (_cache[12] = _createElementVNode(\"h2\", null, \"Add New Logical File\", -1)),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.createNewLogicalFile && _ctx.createNewLogicalFile(...args))),\n          class: \"primary-button\",\n          disabled: !_ctx.newLogicalFileForm.name.trim() || !_ctx.newLogicalFileForm.dataElements[0].name.trim() || !_ctx.newLogicalFileForm.dataElements[0].dtype.trim()\n        }, \" Add Logical File \", 8, _hoisted_19)\n      ]),\n      _createElementVNode(\"table\", _hoisted_20, [\n        _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", _hoisted_21, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.newLogicalFileForm.name) = $event)),\n                placeholder: \"Logical File Name\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.name]\n              ])\n            ])\n          ]),\n          _cache[11] || (_cache[11] = _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n          ], -1))\n        ]),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.newLogicalFileForm.dataElements.slice(0, -1), (dataElement, index) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              class: \"data-element-row\",\n              key: index\n            }, [\n              _createElementVNode(\"td\", _hoisted_22, _toDisplayString(dataElement.name), 1),\n              _createElementVNode(\"td\", _hoisted_23, _toDisplayString(dataElement.dtype), 1),\n              _createElementVNode(\"td\", _hoisted_24, [\n                _createElementVNode(\"button\", {\n                  onClick: ($event: any) => (_ctx.newLogicalFileForm.dataElements.splice(index, 1)),\n                  class: \"danger-button small-button\",\n                  title: `Remove ${dataElement.name} from ${_ctx.newLogicalFileForm.name}`\n                }, \" Remove \", 8, _hoisted_25)\n              ])\n            ]))\n          }), 128)),\n          _createElementVNode(\"tr\", _hoisted_26, [\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].name) = $event)),\n                type: \"text\",\n                class: \"dataElement-input\",\n                placeholder: \"Data Element Name\",\n                maxlength: \"50\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].name]\n              ])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].dtype) = $event)),\n                type: \"text\",\n                class: \"dataElement-input\",\n                placeholder: \"Data Element Type\",\n                maxlength: \"30\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].dtype]\n              ])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[6] || (_cache[6] = ($event: any) => (_ctx.newLogicalFileForm.dataElements.push({ name: '', dtype: '' }))),\n                class: \"success-button small-button\",\n                disabled: !_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1]?.name?.trim() || !_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1]?.dtype?.trim(),\n                title: \"Add new data element\"\n              }, \" Add \", 8, _hoisted_27)\n            ])\n          ])\n        ])\n      ])\n    ])\n  ]))\n}","<!--\n/**\n * LogicalFiles Component\n * \n * A Vue component for managing Logical Files in Function Point Analysis (FPA).\n * This component allows users to:\n * - Parse SQL scripts to extract logical files and their Data Elements\n * - Add new logical files manually\n * - Add/remove Data Elements from existing logical files\n * - View all logical files in a structured table format\n * \n * @component\n * @example\n * <LogicalFiles \n *   :FPA=\"fpaInstance\" \n *   :refreshTrigger=\"refreshCounter\"\n *   @readSQL=\"handleSQLRead\" \n * />\n */\n-->\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, computed, onMounted } from 'vue';\nimport { FPAnalysis, type DataElement } from '../assets/ts/LogicalFileFinder';\n\n\n/**\n * Interface for component props\n */\ninterface Props {\n    FPA: FPAnalysis;\n    refreshTrigger: number;\n}\n\n/**\n * Interface for component emits\n */\ninterface Emits {\n    readSQL: [];\n}\n\nexport default defineComponent({\n    name: 'LogicalFiles',\n    props: {\n        /** Function Point Analysis instance for managing logical files */\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        },\n        /** Trigger value to force component refresh from parent */\n        refreshTrigger: {\n            type: Number,\n            default: 0\n        }\n    },\n    emits: ['readSQL'],\n    setup(props: Props, { emit }) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        /** Force reactivity trigger for computed properties */\n        const forceUpdate = ref<number>(0);\n        \n        /** SQL input text for parsing */\n        const sqlInput = ref<string>('');\n        \n        /** Form data for creating new logical file */\n        const newLogicalFileForm = ref<{\n            name: string;\n            dataElements: DataElement[];\n        }>({\n            name: '',\n            dataElements: [{ name: '', dtype: '' }]\n        });\n\n        /** Input tracking for adding data elements to existing logical files */\n        const newDataElements = ref<Record<string, DataElement>>({});\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        /** \n         * Computed property for logical files with forced reactivity\n         * @returns Array of logical files from FPA instance\n         */\n        const logicalFiles = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value; // Trigger reactivity\n            return props.FPA.getLFs();\n        });\n\n        // ==========================================\n        // UTILITY FUNCTIONS\n        // ==========================================\n        \n        /**\n         * Initializes data element input refs for all logical files\n         * Ensures each logical file has corresponding input fields\n         */\n        const initializeDataElementInputs = (): void => {\n            logicalFiles.value.forEach(lf => {\n                if (!newDataElements.value[lf.name]) {\n                    newDataElements.value[lf.name] = { name: '', dtype: '' };\n                }\n            });\n        };\n\n        /**\n         * Triggers component reactivity and initializes inputs\n         * Used after data changes to ensure UI updates\n         */\n        const triggerUpdate = (): void => {\n            forceUpdate.value++;\n            initializeDataElementInputs();\n        };\n\n        /**\n         * Resets a form object to empty values\n         * @param form - Form object to reset\n         */\n        const resetForm = (form: { name: string; dataElements: DataElement[]}): void => {\n            form.name = '';\n            form.dataElements = [{ name: '', dtype: '' }];\n        };\n\n        /**\n         * Clears data element input for a specific logical file\n         * @param lfName - Name of the logical file\n         */\n        const clearDataElementInput = (lfName: string): void => {\n            if (newDataElements.value[lfName]) {\n                newDataElements.value[lfName].name = '';\n                newDataElements.value[lfName].dtype = '';\n            }\n        };\n\n        // ==========================================\n        // MAIN OPERATIONS\n        // ==========================================\n\n        /**\n         * Parses SQL input and extracts logical files\n         * Updates the FPA instance with discovered logical files\n         */\n        const parseSQL = (): void => {\n            if (!sqlInput.value.trim()) {\n                console.warn('SQL input is empty');\n                return;\n            }\n\n            try {\n                props.FPA.readSQL(sqlInput.value);\n                triggerUpdate();\n                emit('readSQL');\n                console.log('Successfully parsed SQL and found logical files:', logicalFiles.value);\n            } catch (error) {\n                console.error('Error parsing SQL:', error);\n            }\n        };\n\n        /**\n         * Adds a new logical file to the FPA instance\n         * @param name - Name of the logical file\n         * @param dataElements - Array of data elements for the logical file\n         */\n        const addLogicalFile = (name: string, dataElements: DataElement[]): void => {\n            if (!name.trim()) {\n                console.warn('Logical file name cannot be empty');\n                return;\n            }\n\n            if (!dataElements.length || !dataElements[0]?.name?.trim() || !dataElements[0]?.dtype?.trim()) {\n                console.warn('At least one valid data element is required');\n                return;\n            }\n\n            try {\n                props.FPA.addLF(name.trim(), dataElements);\n                newDataElements.value[name] = { name: '', dtype: '' };\n                resetForm(newLogicalFileForm.value);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully added logical file: ${name}`);\n            } catch (error) {\n                console.error('Error adding logical file:', error);\n            }\n        };\n\n        /**\n         * Adds an Data Element to an existing logical file\n         * @param lfName - Name of the logical file\n         * @param dataElement - Data element to add\n         */\n        const addDataElementToLogicalFile = (lfName: string, dataElement: DataElement): void => {\n            if (!dataElement.name.trim() || !dataElement.dtype.trim()) {\n                console.warn('Data element name and type are required');\n                return;\n            }\n\n            try {\n                props.FPA.addDataElementToLF(lfName, {\n                    name: dataElement.name.trim(),\n                    dtype: dataElement.dtype.trim()\n                });\n                clearDataElementInput(lfName);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully added data element ${dataElement.name} to ${lfName}`);\n            } catch (error) {\n                console.error('Error adding data element:', error);\n            }\n        };\n\n        /**\n         * Removes a data element from a logical file\n         * @param lfName - Name of the logical file\n         * @param dataElementName - Name of the data element to remove\n         */\n        const removeDataElementFromLogicalFile = (lfName: string, dataElementName: string): void => {\n            try {\n                props.FPA.removeDataElementFromLF(lfName, dataElementName);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully removed data element ${dataElementName} from ${lfName}`);\n            } catch (error) {\n                console.error('Error removing data element:', error);\n            }\n        };\n\n        /**\n         * Creates a new logical file from the form data\n         */\n        const createNewLogicalFile = (): void => {\n            const { name, dataElements } = newLogicalFileForm.value;\n            \n            // Remove empty data elements\n            const filteredDataElements = dataElements.filter(de => de.name.trim() && de.dtype.trim()); // Filter out empty data elements\n            if (!name.trim() || !filteredDataElements.length) {\n                console.warn('Logical file name and at least one data element are required');\n                return;\n            }\n\n            console.log(`Creating new logical file: ${name} with data elements:`, filteredDataElements);\n            addLogicalFile(name, filteredDataElements);\n        };\n\n        // ==========================================\n        // LIFECYCLE & WATCHERS\n        // ==========================================\n\n        /**\n         * Watches for changes in refreshTrigger prop\n         * Triggers update when parent component requests refresh\n         */\n        watch(() => props.refreshTrigger, () => {\n            triggerUpdate();\n        });\n\n        /**\n         * Component initialization\n         */\n        onMounted(() => {\n            initializeDataElementInputs();\n        });\n\n        // ==========================================\n        // TEMPLATE EXPORTS\n        // ==========================================\n\n        return {\n            // Computed\n            logicalFiles,\n            \n            // Reactive state\n            sqlInput,\n            newLogicalFileForm,\n            newDataElements,\n            \n            // Methods\n            parseSQL,\n            createNewLogicalFile,\n            addDataElementToLogicalFile,\n            removeDataElementFromLogicalFile,\n            \n            // Utilities (exposed for template debugging)\n            triggerUpdate\n        };\n    },\n});\n</script>\n\n<template>\n    <div class=\"logical-files-container\">\n        <!-- SQL Parser Section -->\n        <section class=\"sql-parser-section\">\n            <h2>SQL Parser</h2>\n            <div class=\"input-group\">\n                <textarea \n                    v-model=\"sqlInput\" \n                    class=\"sql-input\"\n                    placeholder=\"Copy your SQL code here...\"\n                    rows=\"4\"\n                />\n                <button \n                    @click=\"parseSQL\" \n                    class=\"primary-button\"\n                    :disabled=\"!sqlInput.trim()\"\n                >\n                    Find Logical Files\n                </button>\n            </div>\n        </section>\n\n        <!-- Logical Files Display Section -->\n        <section class=\"logical-files-section\">\n            <h2>Logical Files</h2>\n            \n            <!-- Display message when no logical files exist -->\n            <div v-if=\"!logicalFiles.length\" class=\"no-files-message\">\n                <p>No logical files found. Parse SQL code or add files manually.</p>\n            </div>\n\n            <!-- Logical Files Tables -->\n            <div v-else class=\"logical-files-grid\">\n                <table \n                    v-for=\"lf in logicalFiles\" \n                    :key=\"lf.name\" \n                    class=\"logical-file-table\"\n                >\n                    <!-- Table Header -->\n                    <thead>\n                        <tr>\n                            <th colspan=\"3\" class=\"table-title\">\n                                {{ lf.name }}\n                            </th>\n                        </tr>\n                        <tr>\n                            <th class=\"column-header\">Data Element Name</th>\n                            <th class=\"column-header\">Data Element Type</th>\n                            <th class=\"column-header\">Actions</th>\n                        </tr>\n                    </thead>\n\n                    <!-- Table Body -->\n                    <tbody>\n                        <!-- Existing Data Elements -->\n                        <tr \n                            v-for=\"dataElement in lf.dataElements\" \n                            :key=\"dataElement.name\"\n                            class=\"dataElement-row\"\n                        >\n                            <td class=\"dataElement-name\">{{ dataElement.name }}</td>\n                            <td class=\"dataElement-type\">{{ dataElement.dtype }}</td>\n                            <td class=\"dataElement-actions\">\n                                <button \n                                    @click=\"removeDataElementFromLogicalFile(lf.name, dataElement.name)\"\n                                    class=\"danger-button small-button\"\n                                    :title=\"`Remove ${dataElement.name} from ${lf.name}`\"\n                                >\n                                    Remove\n                                </button>\n                            </td>\n                        </tr>\n\n                        <!-- Add New Data Element Row -->\n                        <tr class=\"add-dataElement-row\">\n                            <td>\n                                <input \n                                    v-model=\"newDataElements[lf.name].name\" \n                                    type=\"text\"\n                                    class=\"dataElement-input\"\n                                    placeholder=\"Data Element Name\"\n                                    maxlength=\"50\"\n                                />\n                            </td>\n                            <td>\n                                <input \n                                    v-model=\"newDataElements[lf.name].dtype\"\n                                    type=\"text\" \n                                    class=\"dataElement-input\"\n                                    placeholder=\"Data Element Type\"\n                                    maxlength=\"30\"\n                                />\n                            </td>\n                            <td>\n                                <button \n                                    @click=\"addDataElementToLogicalFile(lf.name, newDataElements[lf.name])\"\n                                    class=\"success-button small-button\"\n                                    :disabled=\"!newDataElements[lf.name]?.name?.trim() || !newDataElements[lf.name]?.dtype?.trim()\"\n                                    title=\"Add new data element\"\n                                >\n                                    Add\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </section>\n\n        <!-- Add New Logical File Section -->\n        <section class=\"add-logical-file-section\">\n            <h2>Add New Logical File</h2>\n            <div class=\"form-actions\">\n                <button \n                    @click=\"createNewLogicalFile\"\n                    class=\"primary-button\"\n                    :disabled=\"!newLogicalFileForm.name.trim() || !newLogicalFileForm.dataElements[0].name.trim() || !newLogicalFileForm.dataElements[0].dtype.trim()\"\n                >\n                    Add Logical File\n                </button>\n            </div>\n           \n            <table \n                class=\"logical-file-table\"\n            >\n                <!-- Table Header -->\n                <thead>\n                    <tr>\n                        <th colspan=\"3\" class=\"table-title\">\n                            <input v-model=\"newLogicalFileForm.name\" placeholder=\"Logical File Name\">\n                        </th>\n                    </tr>\n                    <tr>\n                        <th class=\"column-header\">Data Element Name</th>\n                        <th class=\"column-header\">Data Element Type</th>\n                        <th class=\"column-header\">Actions</th>\n                    </tr>\n                </thead>\n\n                <!-- Adding multiple data elements -->\n                <tbody>\n                    <!-- Existing Data Elements -->\n                    <tr\n                        class=\"data-element-row\"\n                        v-for=\"(dataElement, index) in newLogicalFileForm.dataElements.slice(0, -1)\"\n                        :key=\"index\"\n                    >\n                        <td class=\"data-element-name\">{{ dataElement.name }}</td>\n                        <td class=\"data-element-type\">{{ dataElement.dtype }}</td>\n                        <td class=\"data-element-actions\">\n                            <button \n                                @click=\"newLogicalFileForm.dataElements.splice(index, 1)\"\n                                class=\"danger-button small-button\"\n                                :title=\"`Remove ${dataElement.name} from ${newLogicalFileForm.name}`\"\n                            >\n                                Remove\n                            </button>\n                        </td>\n                    </tr>\n\n                    <!-- Add New Data Element Row -->\n                    <tr class=\"add-data-element-row\">\n                        <td>\n                            <input \n                                v-model=\"newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1].name\" \n                                type=\"text\"\n                                class=\"dataElement-input\"\n                                placeholder=\"Data Element Name\"\n                                maxlength=\"50\"\n                            />\n                        </td>\n                        <td>\n                            <input \n                                v-model=\"newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1].dtype\"\n                                type=\"text\" \n                                class=\"dataElement-input\"\n                                placeholder=\"Data Element Type\"\n                                maxlength=\"30\"\n                            />\n                        </td>\n                        <td>\n                            <button \n                                @click=\"newLogicalFileForm.dataElements.push({ name: '', dtype: '' })\"\n                                class=\"success-button small-button\"\n                                :disabled=\"!newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1]?.name?.trim() || !newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1]?.dtype?.trim()\"\n                                title=\"Add new data element\"\n                            >\n                                Add\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.logical-files-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.logical-files-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.logical-files-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-green);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   SQL PARSER SECTION\n   ========================================== */\n\n.sql-parser-section {\n    border-left: 4px solid var(--color-green);\n}\n\n.input-group {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.sql-input {\n    padding: 12px;\n    border: 2px solid var(--color-gray);\n    border-radius: 6px;\n    font-family: 'Courier New', monospace;\n    font-size: 14px;\n    resize: vertical;\n    min-height: 100px;\n    transition: border-color 0.3s ease;\n}\n\n.sql-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   LOGICAL FILES SECTION\n   ========================================== */\n\n.logical-files-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-files-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.logical-files-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.logical-file-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.logical-file-table th,\n.logical-file-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.dataElement-row:hover {\n    background-color: #f8f9fa;\n}\n\n.dataElement-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.dataElement-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.dataElement-actions {\n    text-align: center;\n}\n\n.add-dataElement-row {\n    background-color: #f0f8f0;\n    border-top: 2px solid var(--color-green);\n}\n\n.dataElement-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.dataElement-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 2px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   ADD LOGICAL FILE SECTION\n   ========================================== */\n\n.add-logical-file-section {\n    border-left: 4px solid #3498db;\n}\n\n.new-lf-form {\n    background-color: #f8f9fa;\n    padding: 20px;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.form-row {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    align-items: end;\n}\n\n.form-group {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.form-group label {\n    font-weight: 500;\n    color: var(--color-gray);\n    font-size: 0.9em;\n}\n\n.form-input {\n    padding: 10px;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n.form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45a049, var(--color-green));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .logical-files-container {\n        padding: 10px;\n    }\n    \n    .logical-files-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        gap: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.9em;\n    }\n    \n    .logical-file-table th,\n    .logical-file-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .logical-files-container section {\n        padding: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.8em;\n    }\n    \n    .dataElement-input {\n        font-size: 12px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n\n/* ==========================================\n   ACCESSIBILITY IMPROVEMENTS\n   ========================================== */\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        transition: none !important;\n        animation: none !important;\n    }\n}\n\n.sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n}\n</style>","// Parte do programa dedicada a identificar tabelas e colunas presentes no SQL.\n// A ideia é poder expandir para leitura de outros bancos SQL além do SQLite e para outras formas de contagem no futuro.\nconst sqlScript = `\nCREATE TABLE IF NOT EXISTS \"Mensagem_Inicial\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Texto\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Nome_da_categoria\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Mensagem_da_categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"ID_Categoria\" INTEGER,\n    \"Texto\" TEXT,\n    \"Resposta\" TEXT,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"id\") REFERENCES \"Categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\nCREATE TABLE IF NOT EXISTS \"Acao\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"tipo\" TEXT,\n    \"Valor\" TEXT,\n    \"Mensagem\" INTEGER,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"Mensagem\") REFERENCES \"Mensagem_da_categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\n`;\nconst logicalFiles = {};\n\nexport enum EPType {\n    ExternalInput = \"EI\",\n    ExternalOutput = \"EO\",\n    ExternalInquiry = \"EQ\"\n}\n\nexport interface DataElement {\n    name: string;\n    dtype: string;\n}\n\nexport interface LogicalFile{\n    name: string;\n    dataElements: DataElement[];\n}\n\nexport interface ElementaryProcess {\n    id: string;\n    description: string;\n    type: EPType;\n    dataElements: {name: string, logicalFileName: string}[];\n}\n\n// Regex para capturar tabelas\nconst tableRegex = /CREATE TABLE IF NOT EXISTS\\s+\"([\\w_]+)\"\\s*\\(([\\s\\S]+?)\\);/g;\n\n// Regex para capturar colunas dentro da definição da tabela\nconst columnRegex = /\"([\\w_]+)\"\\s+([\\w]+)/g;\n\n\n\nexport class FPAnalysis{\n    private logicalFiles: LogicalFile[] = [];\n    private elementaryProcesses: ElementaryProcess[] = [];\n    /*constructor(){\n    }*/\n\n    /**\n     * Parses the SQL script and extracts table names and their columns.\n     * *Resets the logicalFiles array before parsing.\n     */\n    public readSQL(sql: string): void{\n        this.logicalFiles = [];\n        let matchTable;\n\n        while ((matchTable = tableRegex.exec(sql)) !== null) {\n            const tableContent = matchTable[2].toString();\n            this.logicalFiles.push({\n                name: matchTable[1].toString(),\n                dataElements: []\n            });\n\n            let matchColumn;\n            while ((matchColumn = columnRegex.exec(tableContent)) !== null) {\n                this.logicalFiles[this.logicalFiles.length - 1].dataElements.push(\n                    {\n                        name: matchColumn[1].toString(),\n                        dtype: matchColumn[2].toString()\n                    }\n                );\n            }\n        }\n    }\n\n    /**\n     * Adds a Logical File (LF) to the analysis.\n     * @param name - The name of the Logical File.\n     * @param attributes - An array of attributes for the Logical File.\n     */\n    public addLF(name: string, attributes: DataElement[]): void {\n        // Verifica se já existe um LF com o mesmo nome\n        if (this.logicalFiles.some(lf => lf.name === name)) {\n            console.warn(`Logical File with name \"${name}\" already exists. Skipping addition.`);\n            return;\n        }\n\n        this.logicalFiles.push({\n            name: name,\n            dataElements: attributes\n        });\n    }\n\n    /**\n     * Adds an attribute to an existing Logical File (LF).\n     * @param lfName - The name of the Logical File to which the attribute will be added.\n     * @param dataElement - The data element to be added.\n     */\n    public addDataElementToLF(lfName: string, dataElement: DataElement): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verifica se o LF existe\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot add data element.`);\n            return;\n        }\n\n        // Verifica se o data element já existe\n        if (lf.dataElements.some(attr => attr.name === dataElement.name)) {\n            console.warn(`Data Element \"${dataElement.name}\" already exists in Logical File \"${lfName}\". Skipping addition.`);\n            return;\n        }\n\n        lf.dataElements.push(dataElement);\n    }\n\n    /**\n     * Removes a Logical File (LF) from the analysis.\n     * @param name - The name of the Logical File to remove.\n     */\n    public removeLF(name: string): void {\n        // Goes through all the Elementary Processes and removes any reference to the LF being removed\n        this.elementaryProcesses.forEach(ep => {\n            ep.dataElements = ep.dataElements.filter(lf => lf.name !== name);\n        });\n\n        // Removes the Logical File from the logicalFiles array\n        this.logicalFiles = this.logicalFiles.filter(lf => lf.name !== name);\n    }\n\n    \n    /**\n     * Removes an attribute from a Logical File (LF).\n     * @param lfName - The name of the Logical File from which the attribute will be removed.\n     * @param dataElement - The name of the attribute to be removed.\n     */\n    public removeDataElementFromLF(lfName: string, dataElement: string): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verify if the Logical File exists\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot remove data element.`);\n            return;\n        }\n\n        // Update the Elementary Processes to remove references to the data element\n        this.elementaryProcesses.forEach(ep => {\n            ep.dataElements = ep.dataElements.filter(de => {\n                return !(de.logicalFileName === lfName && de.name === dataElement);\n            });\n        });\n\n        // Remove the data element from the Logical File\n        lf.dataElements = lf.dataElements.filter(attr => attr.name !== dataElement);\n    }\n\n    /**\n     * Retrieves the list of Logical Files (LFs).\n     * @returns An array of Logical Files.\n     */\n    public getLFs(){\n        return this.logicalFiles;\n    }\n\n    /**\n     * Adds an Elementary Process (EP) to the analysis.\n     * @param description - A description of the Elementary Process.\n     * @param type - The type of the Elementary Process (External Input, External Output, or External Inquiry).\n     * @param logicalFiles - An array of Logical Files referenced by the Elementary Process.\n     */\n    public addEP(description: string, type: EPType, dataElements: {name: string, logicalFileName: string}[]): void{\n        // Verify if the referenced Logical Files and Attributes exist\n        for (const {name, logicalFileName} of dataElements) {\n            const lf = this.logicalFiles.find(lf => lf.name === logicalFileName);\n\n            // Verify if the Logical File exists\n            if (!lf) {\n                console.error(`Logical File \"${logicalFileName}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                return;\n            }\n            // Verify if the Data Element exists in the Logical File\n            for (const DataElement of lf.dataElements) {\n                if (!lf.dataElements.some(existingDE => existingDE.name === DataElement.name)) {\n                    console.error(`Data Element \"${DataElement.name}\" in Logical File \"${logicalFileName}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                    return;\n                }\n            }\n        }\n\n        const newId = `${type}_${this.elementaryProcesses.filter(ep => ep.type === type).length + 1}`;\n\n        this.elementaryProcesses.push({\n            id: newId,\n            description: description,\n            type: type,\n            dataElements: dataElements\n        });\n    }\n\n    /**\n     * Retrieves the list of Elementary Processes (EPs).\n     * @returns An array of Elementary Processes.\n     */\n    public getEPs(){\n        return this.elementaryProcesses;\n    }\n\n    /**\n     * Removes an Elementary Process (EP) from the analysis.\n     * @param description - The description of the Elementary Process to remove.\n     */\n    public removeEP(id: string): void {\n        // Remove the Elementary Process from the elementaryProcesses array\n        this.elementaryProcesses = this.elementaryProcesses.filter(ep => ep.id !== id);\n    }\n\n    /**\n     * Removes Data Element Types (DETs) from an Elementary Process (EP).\n     * @param epId - The ID of the Elementary Process.\n     * @param logicalFileName - The name of the Logical File.\n     * @param dataElementName - The name of the attribute to remove.\n     */\n    public removeDETsFromEP(epId: string, logicalFileName: string, dataElementName: string): void {\n        const ep = this.elementaryProcesses.find(ep => ep.id === epId);\n\n        // Verify if the Elementary Process exists\n        if (!ep) {\n            console.error(`Elementary Process \"${epId}\" not found. Cannot remove DET.`);\n            return;\n        }\n\n        // Remove the Data Element Type (DET) from the Elementary Process\n        ep.dataElements = ep.dataElements.filter(de => !(de.logicalFileName === logicalFileName && de.name === dataElementName));\n    }\n\n    /**\n     * Adds a Data Element Type (DET) to an Elementary Process (EP).\n     * @param epId - The ID of the Elementary Process.\n     * @param dataElement - The data element to add.\n     */\n    public addDETToEP(epId: string, dataElement: {name: string, logicalFileName: string}): void {\n        const ep = this.elementaryProcesses.find(ep => ep.id === epId);\n\n        // Verify if the Elementary Process exists\n        if (!ep) {\n            console.error(`Elementary Process \"${epId}\" not found. Cannot add DET.`);\n            return;\n        }\n\n        // Verify if the referenced Logical File and Attribute exist\n        const lf = this.logicalFiles.find(lf => lf.name === dataElement.logicalFileName);\n        if (!lf) {\n            console.error(`Logical File \"${dataElement.logicalFileName}\" referenced in Elementary Process \"${ep.description}\" does not exist.`);\n            return;\n        }\n        if (!lf.dataElements.some(existingDE => existingDE.name === dataElement.name)) {\n            console.error(`Data Element \"${dataElement.name}\" in Logical File \"${dataElement.logicalFileName}\" referenced in Elementary Process \"${ep.description}\" does not exist.`);\n            return;\n        }\n\n        // Verify if the DET already exists in the EP\n        if (ep.dataElements.some(det => det.logicalFileName === dataElement.logicalFileName && det.name === dataElement.name)) {\n            console.warn(`DET \"${dataElement.name}\" from \"${dataElement.logicalFileName}\" already exists in EP \"${epId}\". Skipping addition.`);\n            return;\n        }\n\n        ep.dataElements.push(dataElement);\n    }\n\n    /*\n    public evaluateFPs(){};\n    */\n}","import { render } from \"./LogicalFiles.vue?vue&type=template&id=42669d2e&scoped=true&ts=true\"\nimport script from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\nexport * from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\n\nimport \"./LogicalFiles.vue?vue&type=style&index=0&id=42669d2e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-42669d2e\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"ep-container\" }\nconst _hoisted_2 = { class: \"add-ep-section\" }\nconst _hoisted_3 = { class: \"new-ep-form\" }\nconst _hoisted_4 = { class: \"form-row\" }\nconst _hoisted_5 = { class: \"form-group\" }\nconst _hoisted_6 = { class: \"form-group\" }\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"form-actions\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = { class: \"ep-list-section\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"no-eps-message\"\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"ep-grid\"\n}\nconst _hoisted_13 = { class: \"ep-table\" }\nconst _hoisted_14 = { class: \"table-title\" }\nconst _hoisted_15 = { colspan: \"3\" }\nconst _hoisted_16 = [\"onClick\"]\nconst _hoisted_17 = { class: \"det-name\" }\nconst _hoisted_18 = { class: \"det-type\" }\nconst _hoisted_19 = { class: \"det-actions\" }\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = {\n  key: 0,\n  class: \"add-det-row\"\n}\nconst _hoisted_22 = [\"onUpdate:modelValue\"]\nconst _hoisted_23 = [\"value\"]\nconst _hoisted_24 = [\"onUpdate:modelValue\", \"disabled\"]\nconst _hoisted_25 = [\"value\"]\nconst _hoisted_26 = { class: \"det-actions\" }\nconst _hoisted_27 = [\"onClick\", \"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Add New Elementary Process\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _cache[3] || (_cache[3] = _createElementVNode(\"label\", { for: \"ep-description\" }, \"Description\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              id: \"ep-description\",\n              class: \"form-input\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.newEPDescription) = $event)),\n              placeholder: \"e.g., Register new user\"\n            }, null, 512), [\n              [_vModelText, _ctx.newEPDescription]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"label\", { for: \"ep-type\" }, \"Type\", -1)),\n            _withDirectives(_createElementVNode(\"select\", {\n              id: \"ep-type\",\n              class: \"form-input\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.newEPType) = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.EPType, (epType) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: epType,\n                  value: epType\n                }, _toDisplayString(epType), 9, _hoisted_7))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, _ctx.newEPType]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.addEP && _ctx.addEP(...args))),\n              class: \"primary-button\",\n              disabled: !_ctx.newEPDescription.trim()\n            }, \"Add EP\", 8, _hoisted_9)\n          ])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_10, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Elementary Processes\", -1)),\n      (_ctx.elementaryProcesses.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \" No elementary processes have been added yet. \"))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementaryProcesses, (ep) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: ep.id,\n                class: \"ep-card\"\n              }, [\n                _createElementVNode(\"table\", _hoisted_13, [\n                  _createElementVNode(\"thead\", null, [\n                    _createElementVNode(\"tr\", _hoisted_14, [\n                      _createElementVNode(\"th\", _hoisted_15, [\n                        _createElementVNode(\"span\", null, _toDisplayString(ep.description) + \" (\" + _toDisplayString(ep.id) + \") - \" + _toDisplayString(ep.type), 1),\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (_ctx.removeEP(ep.id)),\n                          class: \"danger-button small-button\",\n                          style: {\"float\":\"right\"}\n                        }, \"Remove EP\", 8, _hoisted_16)\n                      ])\n                    ]),\n                    _cache[6] || (_cache[6] = _createElementVNode(\"tr\", { class: \"column-header\" }, [\n                      _createElementVNode(\"th\", null, \"Logical File\"),\n                      _createElementVNode(\"th\", null, \"Data Element\"),\n                      _createElementVNode(\"th\", null, \"Actions\")\n                    ], -1))\n                  ]),\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ep.dataElements, (det) => {\n                      return (_openBlock(), _createElementBlock(\"tr\", {\n                        key: `${det.logicalFileName}_${det.name}`,\n                        class: \"det-row\"\n                      }, [\n                        _createElementVNode(\"td\", _hoisted_17, _toDisplayString(det.logicalFileName), 1),\n                        _createElementVNode(\"td\", _hoisted_18, _toDisplayString(det.name), 1),\n                        _createElementVNode(\"td\", _hoisted_19, [\n                          _createElementVNode(\"button\", {\n                            onClick: ($event: any) => (_ctx.removeDET(ep.id, det.logicalFileName, det.name)),\n                            class: \"danger-button small-button\"\n                          }, \"Remove\", 8, _hoisted_20)\n                        ])\n                      ]))\n                    }), 128)),\n                    (_ctx.detInputs[ep.id])\n                      ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_21, [\n                          _createElementVNode(\"td\", null, [\n                            _withDirectives(_createElementVNode(\"select\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((_ctx.detInputs[ep.id].logicalFile) = $event),\n                              class: \"attribute-input\"\n                            }, [\n                              _cache[7] || (_cache[7] = _createElementVNode(\"option\", {\n                                disabled: \"\",\n                                value: \"\"\n                              }, \"Select Logical File\", -1)),\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n                                return (_openBlock(), _createElementBlock(\"option\", {\n                                  key: lf.name,\n                                  value: lf.name\n                                }, _toDisplayString(lf.name), 9, _hoisted_23))\n                              }), 128))\n                            ], 8, _hoisted_22), [\n                              [_vModelSelect, _ctx.detInputs[ep.id].logicalFile]\n                            ])\n                          ]),\n                          _createElementVNode(\"td\", null, [\n                            _withDirectives(_createElementVNode(\"select\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((_ctx.detInputs[ep.id].dataElement) = $event),\n                              class: \"attribute-input\",\n                              disabled: !_ctx.detInputs[ep.id].logicalFile\n                            }, [\n                              _cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n                                disabled: \"\",\n                                value: \"\"\n                              }, \"Select Data Element\", -1)),\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableDETs[_ctx.detInputs[ep.id].logicalFile]?.dataElements, (de) => {\n                                return (_openBlock(), _createElementBlock(\"option\", {\n                                  key: de.name,\n                                  value: de.name\n                                }, _toDisplayString(de.name), 9, _hoisted_25))\n                              }), 128))\n                            ], 8, _hoisted_24), [\n                              [_vModelSelect, _ctx.detInputs[ep.id].dataElement]\n                            ])\n                          ]),\n                          _createElementVNode(\"td\", _hoisted_26, [\n                            _createElementVNode(\"button\", {\n                              onClick: ($event: any) => (_ctx.addDET(ep.id)),\n                              class: \"success-button small-button\",\n                              disabled: !_ctx.detInputs[ep.id].dataElement\n                            }, \"Add DET\", 8, _hoisted_27)\n                          ])\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n    ])\n  ]))\n}","<script lang=\"ts\">\nimport { computed, defineComponent, onUpdated, ref } from 'vue';\nimport { FPAnalysis, EPType, LogicalFile } from '../assets/ts/LogicalFileFinder';\n\nexport default defineComponent({\n    name: 'ElementaryProcesses',\n    props: {\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        }\n    },\n    setup(props) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        const forceUpdate = ref<number>(0);\n        const newEPDescription = ref('');\n        const newEPType = ref<EPType>(EPType.ExternalInput);\n        const detInputs = ref<Record<string, { logicalFile: string; dataElement: string }>>({});\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        const elementaryProcesses = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value;\n            return props.FPA.getEPs();\n        });\n\n        const logicalFiles = computed(() => {\n            return props.FPA.getLFs();\n        });\n\n        const availableDETs = computed(() => {\n            const d: Record<string, LogicalFile> = {};\n            logicalFiles.value.forEach(lf => {\n                d[lf.name] = lf;\n            });\n            return d;\n        });\n\n        // ==========================================\n        // METHODS\n        // ==========================================\n\n        const triggerUpdate = () => {\n            forceUpdate.value++;\n        };\n\n        const initializeDetInputs = () => {\n            elementaryProcesses.value.forEach(ep => {\n                if (!detInputs.value[ep.id]) {\n                    detInputs.value[ep.id] = { logicalFile: '', dataElement: '' };\n                }\n            });\n        };\n\n        const addEP = () => {\n            if (newEPDescription.value.trim()) {\n                props.FPA.addEP(newEPDescription.value, newEPType.value, []);\n                newEPDescription.value = '';\n                newEPType.value = EPType.ExternalInput;\n                triggerUpdate();\n                initializeDetInputs();\n            }\n        };\n\n        const removeEP = (epId: string) => {\n            props.FPA.removeEP(epId);\n            triggerUpdate();\n        };\n\n        const addDET = (epId: string) => {\n            const input = detInputs.value[epId];\n            if (input && input.logicalFile && input.dataElement) {\n                props.FPA.addDETToEP(epId, { name: input.dataElement, logicalFileName: input.logicalFile });\n                // Reset input for that EP\n                detInputs.value[epId] = { logicalFile: '', dataElement: '' };\n                triggerUpdate();\n            }\n        };\n\n        const removeDET = (epId: string, lfName: string, deName: string) => {\n            props.FPA.removeDETsFromEP(epId, lfName, deName);\n            triggerUpdate();\n        };\n\n        onUpdated(() => {\n            initializeDetInputs();\n        });\n\n        initializeDetInputs();\n\n        return {\n            elementaryProcesses,\n            logicalFiles,\n            availableDETs,\n            newEPDescription,\n            newEPType,\n            detInputs,\n            addEP,\n            removeEP,\n            addDET,\n            removeDET,\n            EPType,\n        };\n    },\n});\n</script>\n\n<template>\n    <div class=\"ep-container\">\n        <!-- ADD ELEMENTARY PROCESS SECTION -->\n        <section class=\"add-ep-section\">\n            <h2>Add New Elementary Process</h2>\n            <div class=\"new-ep-form\">\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ep-description\">Description</label>\n                        <input type=\"text\" id=\"ep-description\" class=\"form-input\" v-model=\"newEPDescription\" placeholder=\"e.g., Register new user\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ep-type\">Type</label>\n                        <select id=\"ep-type\" class=\"form-input\" v-model=\"newEPType\">\n                            <option v-for=\"epType in EPType\" :key=\"epType\" :value=\"epType\">{{ epType }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-actions\">\n                        <button @click=\"addEP\" class=\"primary-button\" :disabled=\"!newEPDescription.trim()\">Add EP</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- ELEMENTARY PROCESSES LIST SECTION -->\n        <section class=\"ep-list-section\">\n            <h2>Elementary Processes</h2>\n            <div v-if=\"elementaryProcesses.length === 0\" class=\"no-eps-message\">\n                No elementary processes have been added yet.\n            </div>\n            <div class=\"ep-grid\" v-else>\n                <div v-for=\"ep in elementaryProcesses\" :key=\"ep.id\" class=\"ep-card\">\n                    <table class=\"ep-table\">\n                        <thead>\n                            <tr class=\"table-title\">\n                                <th colspan=\"3\">\n                                    <span>{{ ep.description }} ({{ ep.id }}) - {{ ep.type }}</span>\n                                    <button @click=\"removeEP(ep.id)\" class=\"danger-button small-button\" style=\"float: right;\">Remove EP</button>\n                                </th>\n                            </tr>\n                            <tr class=\"column-header\">\n                                <th>Logical File</th>\n                                <th>Data Element</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"det in ep.dataElements\" :key=\"`${det.logicalFileName}_${det.name}`\" class=\"det-row\">\n                                <td class=\"det-name\">{{ det.logicalFileName }}</td>\n                                <td class=\"det-type\">{{ det.name }}</td>\n                                <td class=\"det-actions\">\n                                    <button @click=\"removeDET(ep.id, det.logicalFileName, det.name)\" class=\"danger-button small-button\">Remove</button>\n                                </td>\n                            </tr>\n                            <!-- ADD DET ROW -->\n                            <tr class=\"add-det-row\" v-if=\"detInputs[ep.id]\">\n                                <td>\n                                    <select v-model=\"detInputs[ep.id].logicalFile\" class=\"attribute-input\">\n                                        <option disabled value=\"\">Select Logical File</option>\n                                        <option v-for=\"lf in logicalFiles\" :key=\"lf.name\" :value=\"lf.name\">{{ lf.name }}</option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select v-model=\"detInputs[ep.id].dataElement\" class=\"attribute-input\" :disabled=\"!detInputs[ep.id].logicalFile\">\n                                        <option disabled value=\"\">Select Data Element</option>\n                                        <option v-for=\"de in availableDETs[detInputs[ep.id].logicalFile]?.dataElements\" :key=\"de.name\" :value=\"de.name\">\n                                            {{ de.name }}\n                                        </option>\n                                    </select>\n                                </td>\n                                <td class=\"det-actions\">\n                                    <button @click=\"addDET(ep.id)\" class=\"success-button small-button\" :disabled=\"!detInputs[ep.id].dataElement\">Add DET</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.ep-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.ep-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.ep-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-blue);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   ADD EP SECTION\n   ========================================== */\n\n.add-ep-section {\n    border-left: 4px solid var(--color-blue);\n}\n\n.new-ep-form {\n    background-color: #f8f9fa;\n    padding: 20px;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.form-row {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    align-items: end;\n}\n\n.form-group {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.form-group label {\n    font-weight: 500;\n    color: var(--color-gray);\n    font-size: 0.9em;\n}\n\n.form-input {\n    padding: 10px;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n    outline: none;\n    border-color: var(--color-blue);\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n}\n\n.form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n/* ==========================================\n   EP LIST SECTION\n   ========================================== */\n\n.ep-list-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-eps-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.ep-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.ep-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.ep-table th,\n.ep-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.det-row:hover {\n    background-color: #f8f9fa;\n}\n\n.det-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.det-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.det-actions {\n    text-align: center;\n}\n\n.add-det-row {\n    background-color: #f0f8ff;\n    border-top: 2px solid var(--color-blue);\n}\n\n.attribute-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.attribute-input:focus {\n    outline: none;\n    border-color: var(--color-blue);\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.1);\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-blue), #3498db);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #3498db, var(--color-blue));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .ep-container {\n        padding: 10px;\n    }\n    \n    .ep-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        align-items: stretch;\n    }\n    \n    .ep-table {\n        font-size: 0.9em;\n    }\n    \n    .ep-table th,\n    .ep-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .ep-container section {\n        padding: 15px;\n    }\n    \n    .ep-table {\n        border-width: 1px;\n    }\n    \n    .attribute-input {\n        padding: 6px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n</style>","import { render } from \"./ElementaryProcesses.vue?vue&type=template&id=65213736&scoped=true&ts=true\"\nimport script from \"./ElementaryProcesses.vue?vue&type=script&lang=ts\"\nexport * from \"./ElementaryProcesses.vue?vue&type=script&lang=ts\"\n\nimport \"./ElementaryProcesses.vue?vue&type=style&index=0&id=65213736&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-65213736\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=f48a7c42&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=f48a7c42&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksimple_fpa\"] = self[\"webpackChunksimple_fpa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4468); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","_hoisted_2","class","_hoisted_3","key","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_LogicalFiles","_resolveComponent","_component_ElementaryProcesses","_openBlock","_createElementBlock","_createElementVNode","_createVNode","FPA","fpaInstance","refreshTrigger","refreshCounter","onReadSQL","handleLogicalFilesUpdate","showDebugInfo","_toDisplayString","currentLogicalFiles","length","JSON","stringify","lastUpdateTime","totalAttributes","_createCommentVNode","onClick","args","toggleDebugInfo","_normalizeClass","active","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","colspan","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_withDirectives","$event","sqlInput","placeholder","rows","_vModelText","parseSQL","disabled","trim","logicalFiles","_Fragment","_renderList","lf","name","dataElements","dataElement","dtype","removeDataElementFromLogicalFile","title","newDataElements","type","maxlength","addDataElementToLogicalFile","createNewLogicalFile","newLogicalFileForm","slice","index","splice","push","EPType","tableRegex","columnRegex","FPAnalysis","constructor","_defineProperty","readSQL","sql","matchTable","this","exec","tableContent","toString","matchColumn","addLF","attributes","some","console","warn","addDataElementToLF","lfName","find","attr","error","removeLF","elementaryProcesses","forEach","ep","filter","removeDataElementFromLF","de","logicalFileName","getLFs","addEP","description","DataElement","existingDE","newId","getEPs","removeEP","removeDETsFromEP","epId","dataElementName","addDETToEP","det","defineComponent","props","required","Number","default","emits","setup","emit","forceUpdate","ref","computed","value","initializeDataElementInputs","triggerUpdate","resetForm","form","clearDataElementInput","log","addLogicalFile","filteredDataElements","watch","onMounted","__exports__","for","newEPDescription","newEPType","epType","_vModelSelect","style","removeDET","detInputs","logicalFile","availableDETs","addDET","ExternalInput","d","initializeDetInputs","input","deName","onUpdated","components","LogicalFiles","ElementaryProcesses","reduce","total","Date","toLocaleTimeString","loadSampleData","sampleSQL","newFiles","oldFiles","previous","current","difference","deep","register","ready","registered","cached","updatefound","updated","offline","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"js/app.1ef1dd2f.js","mappings":"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","sources":["webpack://simple_fpa/./src/App.vue?68ab","webpack://simple_fpa/./src/App.vue","webpack://simple_fpa/./src/components/LogicalFiles.vue?453a","webpack://simple_fpa/./src/components/LogicalFiles.vue","webpack://simple_fpa/./src/assets/ts/FunctionPointAnalysis.ts","webpack://simple_fpa/./src/components/LogicalFiles.vue?8e33","webpack://simple_fpa/./src/components/ElementaryProcesses.vue?8556","webpack://simple_fpa/./src/components/ElementaryProcesses.vue","webpack://simple_fpa/./src/components/ElementaryProcesses.vue?b154","webpack://simple_fpa/./src/components/EndOfAnalysis.vue?2a92","webpack://simple_fpa/./src/components/EndOfAnalysis.vue","webpack://simple_fpa/./src/components/EndOfAnalysis.vue?5cd6","webpack://simple_fpa/./src/App.vue?7ccd","webpack://simple_fpa/./src/registerServiceWorker.ts","webpack://simple_fpa/./src/main.ts","webpack://simple_fpa/webpack/bootstrap","webpack://simple_fpa/webpack/runtime/chunk loaded","webpack://simple_fpa/webpack/runtime/compat get default export","webpack://simple_fpa/webpack/runtime/define property getters","webpack://simple_fpa/webpack/runtime/global","webpack://simple_fpa/webpack/runtime/hasOwnProperty shorthand","webpack://simple_fpa/webpack/runtime/jsonp chunk loading","webpack://simple_fpa/webpack/startup"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = { class: \"app-header\" }\nconst _hoisted_3 = { class: \"app-main\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"debug-section\"\n}\nconst _hoisted_5 = { class: \"app-footer\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_LogicalFiles = _resolveComponent(\"LogicalFiles\")!\n  const _component_ElementaryProcesses = _resolveComponent(\"ElementaryProcesses\")!\n  const _component_EndOfAnalysis = _resolveComponent(\"EndOfAnalysis\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"header\", _hoisted_2, [\n      _cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Function Point Analysis Tool\", -1)),\n      _cache[3] || (_cache[3] = _createElementVNode(\"p\", null, \"Manage and analyze logical files for your software projects\", -1)),\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.loadSampleData && _ctx.loadSampleData(...args))),\n        class: \"load-sample-data\"\n      }, \" Load Sample Data \")\n    ]),\n    _createElementVNode(\"main\", _hoisted_3, [\n      _createVNode(_component_LogicalFiles, {\n        FPA: _ctx.fpaInstance,\n        triggerRefresh: _ctx.refreshLFs,\n        onRefreshLFs: _ctx.handleLFsUpdate\n      }, null, 8, [\"FPA\", \"triggerRefresh\", \"onRefreshLFs\"]),\n      _createVNode(_component_ElementaryProcesses, {\n        FPA: _ctx.fpaInstance,\n        triggerRefresh: _ctx.refreshLFs,\n        onRefreshEPs: _ctx.handleEPsUpdate\n      }, null, 8, [\"FPA\", \"triggerRefresh\", \"onRefreshEPs\"]),\n      (_ctx.showDebugInfo)\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_4, [\n            _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Debug Information\", -1)),\n            _createElementVNode(\"details\", null, [\n              _createElementVNode(\"summary\", null, \"Current Logical Files (\" + _toDisplayString(_ctx.currentLogicalFiles.length) + \")\", 1),\n              _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify(_ctx.currentLogicalFiles, null, 2)), 1)\n            ]),\n            _createElementVNode(\"details\", null, [\n              _cache[4] || (_cache[4] = _createElementVNode(\"summary\", null, \"Component State\", -1)),\n              _createElementVNode(\"ul\", null, [\n                _createElementVNode(\"li\", null, \"Refresh Counter: \" + _toDisplayString(_ctx.refreshLFs), 1),\n                _createElementVNode(\"li\", null, \"Last Update: \" + _toDisplayString(_ctx.lastUpdateTime), 1),\n                _createElementVNode(\"li\", null, \"Total Attributes: \" + _toDisplayString(_ctx.totalAttributes), 1)\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(_component_EndOfAnalysis, {\n        FPA: _ctx.fpaInstance,\n        refreshTrigger: _ctx.refreshLFs + _ctx.refreshEPs,\n        onRefreshLFs: _ctx.handleLFsUpdate,\n        onRefreshEPs: _ctx.handleEPsUpdate\n      }, null, 8, [\"FPA\", \"refreshTrigger\", \"onRefreshLFs\", \"onRefreshEPs\"])\n    ]),\n    _createElementVNode(\"footer\", _hoisted_5, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.toggleDebugInfo && _ctx.toggleDebugInfo(...args))),\n        class: _normalizeClass([\"debug-toggle\", { active: _ctx.showDebugInfo }])\n      }, _toDisplayString(_ctx.showDebugInfo ? 'Hide' : 'Show') + \" Debug Info \", 3)\n    ])\n  ]))\n}","<template>\n  <div id=\"app\">\n    <header class=\"app-header\">\n      <h1>Function Point Analysis Tool</h1>\n      <p>Manage and analyze logical files for your software projects</p>\n      <button @click=\"loadSampleData\" class=\"load-sample-data\">\n        Load Sample Data\n      </button>\n    </header>\n\n    <main class=\"app-main\">\n      <!-- LogicalFiles Component Usage -->\n      <LogicalFiles \n        :FPA=\"fpaInstance\"\n        :triggerRefresh=\"refreshLFs\"\n        @refreshLFs=\"handleLFsUpdate\" \n      />\n\n      <ElementaryProcesses \n        :FPA=\"fpaInstance\" \n        :triggerRefresh=\"refreshLFs\"\n        @refreshEPs=\"handleEPsUpdate\"\n      />\n\n      <!-- Debug Information (Remove in production) -->\n      <section v-if=\"showDebugInfo\" class=\"debug-section\">\n        <h2>Debug Information</h2>\n        <details>\n          <summary>Current Logical Files ({{ currentLogicalFiles.length }})</summary>\n          <pre>{{ JSON.stringify(currentLogicalFiles, null, 2) }}</pre>\n        </details>\n        <details>\n          <summary>Component State</summary>\n          <ul>\n            <li>Refresh Counter: {{ refreshLFs }}</li>\n            <li>Last Update: {{ lastUpdateTime }}</li>\n            <li>Total Attributes: {{ totalAttributes }}</li>\n          </ul>\n        </details>\n      </section>\n\n      <EndOfAnalysis \n        :FPA=\"fpaInstance\" \n        :refreshTrigger=\"refreshLFs + refreshEPs\"\n        @refreshLFs=\"handleLFsUpdate\"\n        @refreshEPs=\"handleEPsUpdate\"\n      />\n    </main>\n\n    <footer class=\"app-footer\">\n      <button \n        @click=\"toggleDebugInfo\" \n        class=\"debug-toggle\"\n        :class=\"{ active: showDebugInfo }\"\n      >\n        {{ showDebugInfo ? 'Hide' : 'Show' }} Debug Info\n      </button>\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, watch } from 'vue';\nimport LogicalFiles from './components/LogicalFiles.vue';\nimport ElementaryProcesses from './components/ElementaryProcesses.vue';\nimport EndOfAnalysis from './components/EndOfAnalysis.vue';\nimport { FPAnalysis } from './assets/ts/FunctionPointAnalysis';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    LogicalFiles,\n    ElementaryProcesses,\n    EndOfAnalysis\n  },\n  setup() {\n    // Initialize FPA instance\n    const fpaInstance = new FPAnalysis();\n    \n    // Component state\n    const refreshLFs = ref(0);\n    const refreshEPs = ref(0);\n    const lastUpdateTime = ref<string>('');\n    const showDebugInfo = ref(false);\n\n    // Computed properties for debugging\n    const currentLogicalFiles = computed(() => {\n      return fpaInstance.getLFs();\n    });\n\n    const totalAttributes = computed(() => {\n      return currentLogicalFiles.value.reduce((total, lf) => {\n        return total + lf.dataElements.length;\n      }, 0);\n    });\n\n    // Event handlers\n    const handleLFsUpdate = (): void => {\n      console.log('Logical files updated:', fpaInstance.getLFs());\n      lastUpdateTime.value = new Date().toLocaleTimeString();\n      refreshLFs.value++;\n    };\n\n    const handleEPsUpdate = (): void => {\n      console.log('Elementary processes updated:', fpaInstance.getEPs());\n      lastUpdateTime.value = new Date().toLocaleTimeString();\n      refreshEPs.value++;\n    };\n\n    const toggleDebugInfo = (): void => {\n      showDebugInfo.value = !showDebugInfo.value;\n    };\n\n    // Sample data for testing (optional)\n    const loadSampleData = (): void => {\n      const sampleSQL = `\n        CREATE TABLE IF NOT EXISTS \"Mensagem_Inicial\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"Texto\" TEXT,\n            PRIMARY KEY(\"id\")\n          );\n          CREATE TABLE IF NOT EXISTS \"Categoria\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"Nome_da_categoria\" TEXT,\n            PRIMARY KEY(\"id\")\n          );\n          CREATE TABLE IF NOT EXISTS \"Mensagem_da_categoria\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"ID_Categoria\" INTEGER,\n            \"Texto\" TEXT,\n            \"Resposta\" TEXT,\n            PRIMARY KEY(\"id\"),\n            FOREIGN KEY (\"id\") REFERENCES \"Categoria\"(\"id\")\n            ON UPDATE NO ACTION ON DELETE NO ACTION\n          );\n          CREATE TABLE IF NOT EXISTS \"Acao\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"tipo\" TEXT,\n            \"Valor\" TEXT,\n            \"Mensagem\" INTEGER,\n            PRIMARY KEY(\"id\"),\n            FOREIGN KEY (\"Mensagem\") REFERENCES \"Mensagem_da_categoria\"(\"id\")\n            ON UPDATE NO ACTION ON DELETE NO ACTION\n          );\n      `;\n      \n      fpaInstance.readSQL(sampleSQL);\n      handleLFsUpdate();\n    };\n\n    // Watch for changes in logical files\n    watch(currentLogicalFiles, (newFiles, oldFiles) => {\n      console.log('Logical files changed:', {\n        previous: oldFiles?.length || 0,\n        current: newFiles.length,\n        difference: newFiles.length - (oldFiles?.length || 0)\n      });\n    }, { deep: true });\n\n    // Component lifecycle\n    onMounted(() => {\n      console.log('App component mounted');\n      // Uncomment to load sample data on startup\n      // loadSampleData();\n    });\n\n    return {\n      // Core functionality\n      fpaInstance,\n      refreshLFs,\n      refreshEPs,\n      handleLFsUpdate,\n      handleEPsUpdate,\n      \n      // Debug features\n      showDebugInfo,\n      toggleDebugInfo,\n      currentLogicalFiles,\n      totalAttributes,\n      lastUpdateTime,\n      \n      // Utilities\n      loadSampleData\n    };\n  }\n});\n</script>\n\n<style>\n/* Global App Styles */\n#app {\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.app-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 2rem;\n  text-align: center;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.app-header h1 {\n  margin: 0 0 0.5rem 0;\n  font-size: 2.5rem;\n  font-weight: 700;\n}\n\n.app-header p {\n  margin: 0;\n  font-size: 1.2rem;\n  opacity: 0.9;\n}\n\n.app-main {\n  flex: 1;\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.debug-section {\n  margin-top: 3rem;\n  padding: 1.5rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #dee2e6;\n}\n\n.debug-section h2 {\n  margin-top: 0;\n  color: #495057;\n}\n\n.debug-section details {\n  margin: 1rem 0;\n  background: white;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n}\n\n.debug-section summary {\n  padding: 1rem;\n  cursor: pointer;\n  background: #f8f9fa;\n  border-radius: 4px 4px 0 0;\n  font-weight: 500;\n}\n\n.debug-section summary:hover {\n  background: #e9ecef;\n}\n\n.debug-section pre {\n  padding: 1rem;\n  margin: 0;\n  background: #f8f9fa;\n  border-radius: 0 0 4px 4px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n}\n\n.debug-section ul {\n  padding: 1rem;\n  margin: 0;\n  list-style: none;\n}\n\n.debug-section li {\n  padding: 0.25rem 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.debug-section li:last-child {\n  border-bottom: none;\n}\n\n.app-footer {\n  padding: 1rem;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.debug-toggle {\n  padding: 0.5rem 1rem;\n  background: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.debug-toggle:hover {\n  background: #5a6268;\n  transform: translateY(-1px);\n}\n\n.debug-toggle.active {\n  background: #007bff;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .app-header {\n    padding: 1.5rem 1rem;\n  }\n  \n  .app-header h1 {\n    font-size: 2rem;\n  }\n  \n  .app-header p {\n    font-size: 1rem;\n  }\n  \n  .app-main {\n    padding: 1rem;\n  }\n}\n\n/* Dark mode support */\n@media (prefers-color-scheme: dark) {\n  .debug-section {\n    background: #343a40;\n    border-color: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section h2 {\n    color: #f8f9fa;\n  }\n  \n  .debug-section details {\n    background: #495057;\n    border-color: #6c757d;\n  }\n  \n  .debug-section summary {\n    background: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section summary:hover {\n    background: #6c757d;\n  }\n  \n  .debug-section pre {\n    background: #343a40;\n    color: #f8f9fa;\n  }\n}\n</style>\n","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect } from \"vue\"\n\nconst _hoisted_1 = { class: \"logical-files-container\" }\nconst _hoisted_2 = { class: \"sql-parser-section\" }\nconst _hoisted_3 = { class: \"input-group\" }\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = { class: \"logical-files-section\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"no-files-message\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"logical-files-grid\"\n}\nconst _hoisted_8 = {\n  colspan: \"2\",\n  class: \"table-title\"\n}\nconst _hoisted_9 = [\"title\"]\nconst _hoisted_10 = {\n  colspan: \"1\",\n  class: \"table-title\"\n}\nconst _hoisted_11 = [\"onClick\", \"title\"]\nconst _hoisted_12 = { key: 0 }\nconst _hoisted_13 = {\n  colspan: \"3\",\n  class: \"lf-description-cell\"\n}\nconst _hoisted_14 = { class: \"dataElement-name\" }\nconst _hoisted_15 = { class: \"dataElement-type\" }\nconst _hoisted_16 = { class: \"dataElement-actions\" }\nconst _hoisted_17 = [\"onClick\", \"title\"]\nconst _hoisted_18 = { class: \"add-dataElement-row\" }\nconst _hoisted_19 = [\"onUpdate:modelValue\"]\nconst _hoisted_20 = [\"onUpdate:modelValue\"]\nconst _hoisted_21 = [\"onClick\", \"disabled\"]\nconst _hoisted_22 = { class: \"add-logical-file-section\" }\nconst _hoisted_23 = { class: \"form-actions\" }\nconst _hoisted_24 = [\"disabled\"]\nconst _hoisted_25 = { class: \"logical-file-table\" }\nconst _hoisted_26 = {\n  colspan: \"3\",\n  class: \"table-title\"\n}\nconst _hoisted_27 = [\"value\"]\nconst _hoisted_28 = {\n  colspan: \"3\",\n  class: \"lf-description-cell\"\n}\nconst _hoisted_29 = { class: \"data-element-name\" }\nconst _hoisted_30 = { class: \"data-element-type\" }\nconst _hoisted_31 = { class: \"data-element-actions\" }\nconst _hoisted_32 = [\"onClick\", \"title\"]\nconst _hoisted_33 = { class: \"add-data-element-row\" }\nconst _hoisted_34 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[10] || (_cache[10] = _createElementVNode(\"h2\", null, \"SQL Parser\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"textarea\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.sqlInput) = $event)),\n          class: \"sql-input\",\n          placeholder: \"Copy your SQL code here...\",\n          rows: \"4\"\n        }, null, 512), [\n          [_vModelText, _ctx.sqlInput]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.parseSQL && _ctx.parseSQL(...args))),\n          class: \"primary-button\",\n          disabled: !_ctx.sqlInput.trim()\n        }, \" Find Logical Files \", 8, _hoisted_4)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_5, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"Logical Files\", -1)),\n      (!_ctx.logicalFiles.length)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[11] || (_cache[11] = [\n            _createElementVNode(\"p\", null, \"No logical files found. Parse SQL code or add files manually.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n              return (_openBlock(), _createElementBlock(\"table\", {\n                key: lf?.name,\n                class: \"logical-file-table\"\n              }, [\n                _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", _hoisted_8, [\n                      _createElementVNode(\"button\", {\n                        class: \"alert-button small-button\",\n                        title: `Remove ${lf.name}`\n                      }, _toDisplayString(lf.type), 9, _hoisted_9),\n                      _createTextVNode(\" \" + _toDisplayString(lf.name), 1)\n                    ]),\n                    _createElementVNode(\"th\", _hoisted_10, [\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (_ctx.removeLogicalFile(lf.name)),\n                        class: \"danger-button small-button\",\n                        title: `Remove ${lf.name}`\n                      }, \" Remove \", 8, _hoisted_11)\n                    ])\n                  ]),\n                  (lf.description)\n                    ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [\n                        _createElementVNode(\"td\", _hoisted_13, [\n                          _createElementVNode(\"em\", null, _toDisplayString(lf.description), 1)\n                        ])\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  _cache[12] || (_cache[12] = _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n                  ], -1))\n                ]),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lf.dataElements, (dataElement) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: dataElement.name,\n                      class: \"dataElement-row\"\n                    }, [\n                      _createElementVNode(\"td\", _hoisted_14, _toDisplayString(dataElement.name), 1),\n                      _createElementVNode(\"td\", _hoisted_15, _toDisplayString(dataElement.dtype), 1),\n                      _createElementVNode(\"td\", _hoisted_16, [\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (_ctx.removeDataElementFromLogicalFile(lf.name, dataElement.name)),\n                          class: \"danger-button small-button\",\n                          title: `Remove ${dataElement.name} from ${lf.name}`\n                        }, \" Remove \", 8, _hoisted_17)\n                      ])\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", _hoisted_18, [\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.newDataElements[lf.name].name) = $event),\n                        type: \"text\",\n                        class: \"dataElement-input\",\n                        placeholder: \"Data Element Name\",\n                        maxlength: \"50\"\n                      }, null, 8, _hoisted_19), [\n                        [_vModelText, _ctx.newDataElements[lf.name].name]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.newDataElements[lf.name].dtype) = $event),\n                        type: \"text\",\n                        class: \"dataElement-input\",\n                        placeholder: \"Data Element Type\",\n                        maxlength: \"30\"\n                      }, null, 8, _hoisted_20), [\n                        [_vModelText, _ctx.newDataElements[lf.name].dtype]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (_ctx.addDataElementToLogicalFile(lf.name, _ctx.newDataElements[lf.name])),\n                        class: \"success-button small-button\",\n                        disabled: !_ctx.newDataElements[lf.name]?.name?.trim() || !_ctx.newDataElements[lf.name]?.dtype?.trim(),\n                        title: \"Add new data element\"\n                      }, \" Add \", 8, _hoisted_21)\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n    ]),\n    _createElementVNode(\"section\", _hoisted_22, [\n      _cache[15] || (_cache[15] = _createElementVNode(\"h2\", null, \"Add New Logical File\", -1)),\n      _createElementVNode(\"div\", _hoisted_23, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.createNewLogicalFile && _ctx.createNewLogicalFile(...args))),\n          class: \"primary-button\",\n          disabled: !_ctx.newLogicalFileForm.name.trim() || !_ctx.newLogicalFileForm.dataElements[0].name.trim() || !_ctx.newLogicalFileForm.dataElements[0].dtype.trim()\n        }, \" Add Logical File \", 8, _hoisted_24)\n      ]),\n      _createElementVNode(\"table\", _hoisted_25, [\n        _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", _hoisted_26, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.newLogicalFileForm.type) = $event)),\n                class: \"form-input\",\n                style: {\"margin-right\":\"1%\"},\n                title: \"Select Logical File Type\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(Object.values(_ctx.LFType), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_27))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, _ctx.newLogicalFileForm.type]\n              ]),\n              (_ctx.newLogicalFileForm.type === _ctx.LFType.RecordElementType)\n                ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n                    key: 0,\n                    type: \"text\",\n                    class: \"form-input\",\n                    id: \"parentName\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.newLogicalFileForm.parentName) = $event)),\n                    placeholder: \"Parent Logical File Name\"\n                  }, null, 512)), [\n                    [_vModelText, _ctx.newLogicalFileForm.parentName]\n                  ])\n                : _createCommentVNode(\"\", true),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                class: \"form-input\",\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.newLogicalFileForm.name) = $event)),\n                placeholder: \"Logical File Name\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.name]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"td\", _hoisted_28, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"form-input\",\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.newLogicalFileForm.description) = $event)),\n                placeholder: \"Description (optional)\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.description]\n              ])\n            ])\n          ]),\n          _cache[14] || (_cache[14] = _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n            _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n          ], -1))\n        ]),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.newLogicalFileForm.dataElements.slice(0, -1), (dataElement, index) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              class: \"data-element-row\",\n              key: index\n            }, [\n              _createElementVNode(\"td\", _hoisted_29, _toDisplayString(dataElement.name), 1),\n              _createElementVNode(\"td\", _hoisted_30, _toDisplayString(dataElement.dtype), 1),\n              _createElementVNode(\"td\", _hoisted_31, [\n                _createElementVNode(\"button\", {\n                  onClick: ($event: any) => (_ctx.newLogicalFileForm.dataElements.splice(index, 1)),\n                  class: \"danger-button small-button\",\n                  title: `Remove ${dataElement.name} from ${_ctx.newLogicalFileForm.name}`\n                }, \" Remove \", 8, _hoisted_32)\n              ])\n            ]))\n          }), 128)),\n          _createElementVNode(\"tr\", _hoisted_33, [\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].name) = $event)),\n                type: \"text\",\n                class: \"dataElement-input\",\n                placeholder: \"Data Element Name\",\n                maxlength: \"50\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].name]\n              ])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].dtype) = $event)),\n                type: \"text\",\n                class: \"dataElement-input\",\n                placeholder: \"Data Element Type\",\n                maxlength: \"30\"\n              }, null, 512), [\n                [_vModelText, _ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1].dtype]\n              ])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[9] || (_cache[9] = ($event: any) => (_ctx.newLogicalFileForm.dataElements.push({ name: '', dtype: '' }))),\n                class: \"success-button small-button\",\n                disabled: !_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1]?.name?.trim() || !_ctx.newLogicalFileForm.dataElements[_ctx.newLogicalFileForm.dataElements.length - 1]?.dtype?.trim(),\n                title: \"Add new data element\"\n              }, \" Add \", 8, _hoisted_34)\n            ])\n          ])\n        ])\n      ])\n    ])\n  ]))\n}","<!--\n/**\n * LogicalFiles Component\n * \n * A Vue component for managing Logical Files in Function Point Analysis (FPA).\n * This component allows users to:\n * - Parse SQL scripts to extract logical files and their Data Elements\n * - Add new logical files manually\n * - Add/remove Data Elements from existing logical files\n * - View all logical files in a structured table format\n * \n * @component\n * @example\n * <LogicalFiles \n *    :FPA=\"fpaInstance\" \n *    :triggerRefresh=\"triggerRefresh\"\n *    @refreshLFs=\"refreshLFs\" \n * />\n */\n-->\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, computed, onMounted, triggerRef } from 'vue';\nimport { FPAnalysis, type DataElement, LFType } from '../assets/ts/FunctionPointAnalysis';\n\n\nexport default defineComponent({\n    name: 'LogicalFiles',\n    props: {\n        /** Function Point Analysis instance for managing logical files */\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        },\n        triggerRefresh: {\n            type: Number,\n            required: false,\n            default: 0 // Default value for reactivity\n        }\n    },\n    emits: ['refreshLFs'],\n\n    setup(props: {FPA: FPAnalysis; triggerRefresh: number}, { emit }) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        /** Force reactivity trigger for computed properties */\n        const forceUpdate = ref<number>(0);\n        \n        /** SQL input text for parsing */\n        const sqlInput = ref<string>('');\n        \n        /** Form data for creating new logical file */\n        const newLogicalFileForm = ref<{\n            name: string;\n            type: LFType; // Optional type, can be set later\n            dataElements: DataElement[];\n            description?: string;\n            parentName?: string; // Optional parent name for RET type\n        }>({\n            name: '',\n            type: LFType.InternalLogicalFile,\n            dataElements: [{ name: '', dtype: '' }],\n            description: '',\n            parentName: ''\n        });\n\n        /** Input tracking for adding data elements to existing logical files */\n        const newDataElements = ref<Record<string, DataElement>>({});\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        /** \n         * Computed property for logical files with forced reactivity\n         * @returns Array of logical files from FPA instance\n         */\n        const logicalFiles = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value; // Trigger reactivity\n            return props.FPA.getLFs();\n        });\n\n        // ==========================================\n        // UTILITY FUNCTIONS\n        // ==========================================\n        \n        /**\n         * Initializes data element input refs for all logical files\n         * Ensures each logical file has corresponding input fields\n         */\n        const initializeDataElementInputs = (): void => {\n            logicalFiles.value.forEach(lf => {\n                if (!newDataElements.value[lf.name]) {\n                    newDataElements.value[lf.name] = { name: '', dtype: '' };\n                }\n            });\n        };\n\n        /**\n         * Triggers component reactivity and initializes inputs\n         * Used after data changes to ensure UI updates\n         * This function is called whenever logical files are updated\n         */\n        const outdatedLFs = (): void => {\n            forceUpdate.value++;\n            initializeDataElementInputs();\n            emit('refreshLFs');\n        };\n\n        /**\n         * Clears data element input for a specific logical file\n         * @param lfName - Name of the logical file\n         */\n        const clearDataElementInput = (lfName: string): void => {\n            if (newDataElements.value[lfName]) {\n                newDataElements.value[lfName].name = '';\n                newDataElements.value[lfName].dtype = '';\n            }\n        };\n\n        // ==========================================\n        // MAIN OPERATIONS\n        // ==========================================\n\n        /**\n         * Parses SQL input and extracts logical files\n         * Updates the FPA instance with discovered logical files\n         */\n        const parseSQL = (): void => {\n            if (!sqlInput.value.trim()) {\n                console.warn('SQL input is empty');\n                return;\n            }\n\n            try {\n                props.FPA.readSQL(sqlInput.value);\n                outdatedLFs();\n                console.log('Successfully parsed SQL and found logical files:', logicalFiles.value);\n            } catch (error) {\n                console.error('Error parsing SQL:', error);\n            }\n        };\n\n        /**\n         * Adds a new logical file to the FPA instance\n         * @param name - Name of the logical file\n         * @param type - Type of the logical file (ILF, EIF or RET)\n         * @param dataElements - Array of data elements for the logical file\n         * @param description - Optional description for the logical file\n         */\n        const addLogicalFile = (name: string, type: LFType, dataElements: DataElement[], description?: string, parentName?: string): void => {\n            if (!name.trim()) {\n                console.warn('Logical file name cannot be empty');\n                return;\n            }\n\n            if (!dataElements.length || !dataElements[0]?.name?.trim() || !dataElements[0]?.dtype?.trim()) {\n                console.warn('At least one valid data element is required');\n                return;\n            }\n\n            if (type === LFType.RecordElementType) {\n                if (!parentName?.trim()) {\n                    console.warn('Parent logical file name is required for Record Element Type');\n                    return;\n                }\n\n                if (!props.FPA.getLFs().some(lf => lf.name === parentName.trim())) {\n                    console.warn(`Parent logical file \"${parentName}\" does not exist`);\n                    return;\n                }\n            }\n\n            if (props.FPA.getLFs().some(lf => lf.name === name)) {\n                console.warn(`Logical file with name \"${name}\" already exists`);\n                return;\n            }\n\n            try {\n                props.FPA.addLF(name.trim(), type, dataElements, description?.trim() || undefined, parentName?.trim() || undefined); // Add logical file to FPA instance\n                \n                // Reset form state after successful addition\n                newDataElements.value[name] = { name: '', dtype: '' };\n                newLogicalFileForm.value = {\n                    name: '',\n                    type: LFType.InternalLogicalFile,\n                    dataElements: [{ name: '', dtype: '' }],\n                    description: '',\n                    parentName: ''\n                };\n\n                outdatedLFs();\n                console.log(`Successfully added logical file: ${name}`);\n            } catch (error) {\n                console.error('Error adding logical file:', error);\n            }\n        };\n\n        /**\n         * Adds an Data Element to an existing logical file\n         * @param lfName - Name of the logical file\n         * @param dataElement - Data element to add\n         */\n        const addDataElementToLogicalFile = (lfName: string, dataElement: DataElement): void => {\n            if (!dataElement.name.trim() || !dataElement.dtype.trim()) {\n                console.warn('Data element name and type are required');\n                return;\n            }\n\n            try {\n                props.FPA.addDataElementToLF(lfName, {\n                    name: dataElement.name.trim(),\n                    dtype: dataElement.dtype.trim()\n                });\n                clearDataElementInput(lfName);\n                outdatedLFs();\n                console.log(`Successfully added data element ${dataElement.name} to ${lfName}`);\n            } catch (error) {\n                console.error('Error adding data element:', error);\n            }\n        };\n\n        /**\n         * Removes a data element from a logical file\n         * @param lfName - Name of the logical file\n         * @param dataElementName - Name of the data element to remove\n         */\n        const removeDataElementFromLogicalFile = (lfName: string, dataElementName: string): void => {\n            try {\n                props.FPA.removeDataElementFromLF(lfName, dataElementName);\n                outdatedLFs();\n                console.log(`Successfully removed data element ${dataElementName} from ${lfName}`);\n            } catch (error) {\n                console.error('Error removing data element:', error);\n            }\n        };\n\n        /**\n         * Removes a logical file from the FPA instance\n         * @param lfName - Name of the logical file to remove\n         */\n        const removeLogicalFile = (lfName: string): void => {\n            try {\n                props.FPA.removeLF(lfName);\n                outdatedLFs();\n                console.log(`Successfully removed logical file: ${lfName}`);\n            } catch (error) {\n                console.error('Error removing logical file:', error);\n            }\n        };\n\n        /**\n         * Creates a new logical file from the form data\n         */\n        const createNewLogicalFile = (): void => {\n            const { name, type, dataElements, description, parentName } = newLogicalFileForm.value;\n            // Remove empty data elements\n            const filteredDataElements = dataElements.filter(de => de.name.trim() && de.dtype.trim()); // Filter out empty data elements\n            if (!name.trim() || !filteredDataElements.length) {\n                console.warn('Logical file name and at least one data element are required');\n                return;\n            }\n            if (type === LFType.RecordElementType && !parentName?.trim()) {\n                console.warn('Parent logical file name is required for Record Element Type');\n                return;\n            }\n\n            console.log(`Creating new logical file: ${name} with data elements:`, filteredDataElements);\n            addLogicalFile(name, type, filteredDataElements, description, parentName);\n        };\n\n        // ==========================================\n        // LIFECYCLE & WATCHERS\n        // ==========================================\n\n        /**\n         * Watches for changes in refreshTrigger prop\n         * Triggers update when parent component requests refresh\n         */\n        watch(() => props.triggerRefresh, () => {\n            forceUpdate.value++;\n            initializeDataElementInputs();\n        });\n\n        /**\n         * Component initialization\n         */\n        onMounted(() => {\n            initializeDataElementInputs();\n        });\n\n        // ==========================================\n        // TEMPLATE EXPORTS\n        // ==========================================\n\n        return {\n            // Computed\n            logicalFiles,\n            \n            // Reactive state\n            sqlInput,\n            newLogicalFileForm,\n            newDataElements,\n            \n            // Methods\n            parseSQL,\n            createNewLogicalFile,\n            addDataElementToLogicalFile,\n            removeDataElementFromLogicalFile,\n            removeLogicalFile,\n            \n            // Utilities (exposed for template debugging)\n            outdatedLFs,\n\n            // Form Options\n            LFType: LFType,\n        };\n    },\n});\n</script>\n\n<template>\n    <div class=\"logical-files-container\">\n        <!-- SQL Parser Section -->\n        <section class=\"sql-parser-section\">\n            <h2>SQL Parser</h2>\n            <div class=\"input-group\">\n                <textarea \n                    v-model=\"sqlInput\" \n                    class=\"sql-input\"\n                    placeholder=\"Copy your SQL code here...\"\n                    rows=\"4\"\n                />\n                <button \n                    @click=\"parseSQL\" \n                    class=\"primary-button\"\n                    :disabled=\"!sqlInput.trim()\"\n                >\n                    Find Logical Files\n                </button>\n            </div>\n        </section>\n\n        <!-- Logical Files Display Section -->\n        <section class=\"logical-files-section\">\n            <h2>Logical Files</h2>\n            <!-- Display message when no logical files exist -->\n            <div v-if=\"!logicalFiles.length\" class=\"no-files-message\">\n                <p>No logical files found. Parse SQL code or add files manually.</p>\n            </div>\n            <!-- Logical Files Tables -->\n            <div v-else class=\"logical-files-grid\">\n                <table \n                    v-for=\"lf in logicalFiles\" \n                    :key=\"lf?.name\" \n                    class=\"logical-file-table\"\n                >\n                    <!-- Table Header -->\n                    <thead>\n                        <tr>\n                            <th colspan=\"2\" class=\"table-title\">\n                                <button \n                                    class=\"alert-button small-button\"\n                                    :title=\"`Remove ${lf.name}`\"\n                                >\n                                    {{ lf.type }}\n                                </button>\n                                {{ lf.name }}\n                            </th>\n                            <th colspan=\"1\" class=\"table-title\">\n                                <button \n                                    @click=\"removeLogicalFile(lf.name)\"\n                                    class=\"danger-button small-button\"\n                                    :title=\"`Remove ${lf.name}`\"\n                                >\n                                    Remove\n                                </button>\n                            </th>\n                        </tr>\n                        <tr v-if=\"lf.description\">\n                            <td colspan=\"3\" class=\"lf-description-cell\">\n                                <em>{{ lf.description }}</em>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th class=\"column-header\">Data Element Name</th>\n                            <th class=\"column-header\">Data Element Type</th>\n                            <th class=\"column-header\">Actions</th>\n                        </tr>\n                    </thead>\n\n                    <!-- Table Body -->\n                    <tbody>\n                        <!-- Existing Data Elements -->\n                        <tr \n                            v-for=\"dataElement in lf.dataElements\" \n                            :key=\"dataElement.name\"\n                            class=\"dataElement-row\"\n                        >\n                            <td class=\"dataElement-name\">{{ dataElement.name }}</td>\n                            <td class=\"dataElement-type\">{{ dataElement.dtype }}</td>\n                            <td class=\"dataElement-actions\">\n                                <button \n                                    @click=\"removeDataElementFromLogicalFile(lf.name, dataElement.name)\"\n                                    class=\"danger-button small-button\"\n                                    :title=\"`Remove ${dataElement.name} from ${lf.name}`\"\n                                >\n                                    Remove\n                                </button>\n                            </td>\n                        </tr>\n\n                        <!-- Add New Data Element Row -->\n                        <tr class=\"add-dataElement-row\">\n                            <td>\n                                <input \n                                    v-model=\"newDataElements[lf.name].name\" \n                                    type=\"text\"\n                                    class=\"dataElement-input\"\n                                    placeholder=\"Data Element Name\"\n                                    maxlength=\"50\"\n                                />\n                            </td>\n                            <td>\n                                <input \n                                    v-model=\"newDataElements[lf.name].dtype\"\n                                    type=\"text\" \n                                    class=\"dataElement-input\"\n                                    placeholder=\"Data Element Type\"\n                                    maxlength=\"30\"\n                                />\n                            </td>\n                            <td>\n                                <button \n                                    @click=\"addDataElementToLogicalFile(lf.name, newDataElements[lf.name])\"\n                                    class=\"success-button small-button\"\n                                    :disabled=\"!newDataElements[lf.name]?.name?.trim() || !newDataElements[lf.name]?.dtype?.trim()\"\n                                    title=\"Add new data element\"\n                                >\n                                    Add\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </section>\n\n        <!-- Add New Logical File Section -->\n        <section class=\"add-logical-file-section\">\n            <h2>Add New Logical File</h2>\n            <div class=\"form-actions\">\n                <button \n                    @click=\"createNewLogicalFile\"\n                    class=\"primary-button\"\n                    :disabled=\"!newLogicalFileForm.name.trim() || !newLogicalFileForm.dataElements[0].name.trim() || !newLogicalFileForm.dataElements[0].dtype.trim()\"\n                >\n                    Add Logical File\n                </button>\n            </div>\n           \n            <table  class=\"logical-file-table\">\n                <!-- Table Header -->\n                <thead>\n                    <tr>\n                        <th colspan=\"3\" class=\"table-title\">\n                            <select \n                                v-model=\"newLogicalFileForm.type\" \n                                class=\"form-input\"\n                                style=\"margin-right: 1%;\"\n                                title=\"Select Logical File Type\"\n                            >\n                                <option \n                                    v-for=\"type in Object.values(LFType)\" :key=\"type\" :value=\"type\"\n                                    >\n                                    {{ type }}\n                                </option>\n                            </select>\n                            <input\n                                type=\"text\" \n                                class=\"form-input\"\n                                id=\"parentName\"\n                                v-model=\"newLogicalFileForm.parentName\" \n                                placeholder=\"Parent Logical File Name\"\n                                v-if=\"newLogicalFileForm.type === LFType.RecordElementType\"\n                            >\n                            <input\n                                type=\"text\"\n                                class=\"form-input\"\n                                v-model=\"newLogicalFileForm.name\" \n                                placeholder=\"Logical File Name\"\n                            >\n                        </th>\n                    </tr>\n                    <tr>\n                        <td colspan=\"3\" class=\"lf-description-cell\">\n                            <input \n                                class=\"form-input\"\n                                v-model=\"newLogicalFileForm.description\" \n                                placeholder=\"Description (optional)\" \n                            />\n                        </td>\n                    </tr>\n                    <tr>\n                        <th class=\"column-header\">Data Element Name</th>\n                        <th class=\"column-header\">Data Element Type</th>\n                        <th class=\"column-header\">Actions</th>\n                    </tr>\n                </thead>\n\n                <!-- Adding multiple data elements -->\n                <tbody>\n                    <!-- Existing Data Elements -->\n                    <tr\n                        class=\"data-element-row\"\n                        v-for=\"(dataElement, index) in newLogicalFileForm.dataElements.slice(0, -1)\"\n                        :key=\"index\"\n                    >\n                        <td class=\"data-element-name\">{{ dataElement.name }}</td>\n                        <td class=\"data-element-type\">{{ dataElement.dtype }}</td>\n                        <td class=\"data-element-actions\">\n                            <button \n                                @click=\"newLogicalFileForm.dataElements.splice(index, 1)\"\n                                class=\"danger-button small-button\"\n                                :title=\"`Remove ${dataElement.name} from ${newLogicalFileForm.name}`\"\n                            >\n                                Remove\n                            </button>\n                        </td>\n                    </tr>\n\n                    <!-- Add New Data Element Row -->\n                    <tr class=\"add-data-element-row\">\n                        <td>\n                            <input \n                                v-model=\"newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1].name\" \n                                type=\"text\"\n                                class=\"dataElement-input\"\n                                placeholder=\"Data Element Name\"\n                                maxlength=\"50\"\n                            />\n                        </td>\n                        <td>\n                            <input \n                                v-model=\"newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1].dtype\"\n                                type=\"text\" \n                                class=\"dataElement-input\"\n                                placeholder=\"Data Element Type\"\n                                maxlength=\"30\"\n                            />\n                        </td>\n                        <td>\n                            <button \n                                @click=\"newLogicalFileForm.dataElements.push({ name: '', dtype: '' })\"\n                                class=\"success-button small-button\"\n                                :disabled=\"!newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1]?.name?.trim() || !newLogicalFileForm.dataElements[newLogicalFileForm.dataElements.length - 1]?.dtype?.trim()\"\n                                title=\"Add new data element\"\n                            >\n                                Add\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.logical-files-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.logical-files-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.logical-files-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-green);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   SQL PARSER SECTION\n   ========================================== */\n\n.sql-parser-section {\n    border-left: 4px solid var(--color-green);\n}\n\n.input-group {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.sql-input {\n    padding: 12px;\n    border: 2px solid var(--color-gray);\n    border-radius: 6px;\n    font-family: 'Courier New', monospace;\n    font-size: 14px;\n    resize: vertical;\n    min-height: 100px;\n    transition: border-color 0.3s ease;\n}\n\n.sql-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   LOGICAL FILES SECTION\n   ========================================== */\n\n.logical-files-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-files-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.logical-files-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.logical-file-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.logical-file-table th,\n.logical-file-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.dataElement-row:hover {\n    background-color: #f8f9fa;\n}\n\n.dataElement-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.dataElement-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.dataElement-actions {\n    text-align: center;\n}\n\n.add-dataElement-row {\n    background-color: #f0f8f0;\n    border-top: 2px solid var(--color-green);\n}\n\n.dataElement-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.dataElement-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 2px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   ADD LOGICAL FILE SECTION\n   ========================================== */\n\n.add-logical-file-section {\n    border-left: 4px solid #3498db;\n}\n\n.new-lf-form {\n    background-color: #f8f9fa;\n    padding: 20px;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.form-row {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    align-items: end;\n}\n\n.form-group {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.form-group label {\n    font-weight: 500;\n    color: var(--color-gray);\n    font-size: 0.9em;\n}\n\n.form-input {\n    padding: 10px;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n.form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button,\n.alert-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45a049, var(--color-green));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.alert-button {\n    background: linear-gradient(135deg, #e0aa09, #ffca2c);\n    color: white;\n}\n\n.alert-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #ffca2c, #e0aa09);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .logical-files-container {\n        padding: 10px;\n    }\n    \n    .logical-files-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        gap: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.9em;\n    }\n    \n    .logical-file-table th,\n    .logical-file-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .logical-files-container section {\n        padding: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.8em;\n    }\n    \n    .dataElement-input {\n        font-size: 12px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button,\n    .alert-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n\n/* ==========================================\n   ACCESSIBILITY IMPROVEMENTS\n   ========================================== */\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        transition: none !important;\n        animation: none !important;\n    }\n}\n\n.sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n}\n\n.lf-description-cell {\n    background-color: #f7f7e6;\n    color: #666;\n    font-size: 1em;\n    padding: 8px 12px;\n    border-bottom: 1px solid #e0e0e0;\n    text-align: left;\n}\n</style>","// Parte do programa dedicada a identificar tabelas e colunas presentes no SQL.\n// A ideia é poder expandir para leitura de outros bancos SQL além do SQLite e para outras formas de contagem no futuro.\nconst sqlScript = `\nCREATE TABLE IF NOT EXISTS \"Mensagem_Inicial\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Texto\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Nome_da_categoria\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Mensagem_da_categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"ID_Categoria\" INTEGER,\n    \"Texto\" TEXT,\n    \"Resposta\" TEXT,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"id\") REFERENCES \"Categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\nCREATE TABLE IF NOT EXISTS \"Acao\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"tipo\" TEXT,\n    \"Valor\" TEXT,\n    \"Mensagem\" INTEGER,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"Mensagem\") REFERENCES \"Mensagem_da_categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\n`;\n\nfunction ILFContribution(complexity: string): number {\n    switch (complexity) {\n        case \"Low\": return 7;\n        case \"Average\": return 10;\n        case \"High\": return 15;\n        default: throw new Error(`Unknown complexity: ${complexity}`);\n    }\n}\n\nfunction EIFContribution(complexity: string): number {\n    switch (complexity) {\n        case \"Low\": return 5;\n        case \"Average\": return 7;\n        case \"High\": return 10;\n        default: throw new Error(`Unknown complexity: ${complexity}`);\n    }\n}\n\nfunction EIandEOContribution(complexity: string): number {\n    switch (complexity) {\n        case \"Low\": return 3;\n        case \"Average\": return 4;\n        case \"High\": return 6;\n        default: throw new Error(`Unknown complexity: ${complexity}`);\n    }\n}\n\nfunction EQContribution(complexity: string): number {\n    switch (complexity) {\n        case \"Low\": return 4;\n        case \"Average\": return 5;\n        case \"High\": return 7;\n        default: throw new Error(`Unknown complexity: ${complexity}`);\n    }\n}\n\nexport enum EPType {\n    ExternalInput = \"EI\",\n    ExternalOutput = \"EO\",\n    ExternalInquiry = \"EQ\"\n}\n\nexport enum LFType {\n    InternalLogicalFile = \"ILF\",\n    ExternalInterfaceFile = \"EIF\",\n    RecordElementType = \"RET\"\n}\n\nexport interface DataElement {\n    name: string;\n    dtype: string;\n}\n\n\nexport interface LogicalFile{\n    name: string;\n    type: LFType;\n    parentName?: string; // if it is a Record Element Type (RET), it needs to have a parent Logical File\n    dataElements: DataElement[];\n    description?: string;\n    FPs?: number; // Optional: to store the Function Points (FPs) for the Logical File\n}\n\nexport interface ElementaryProcess {\n    id: string;\n    description: string;\n    type: EPType;\n    dataElements: {name: string, logicalFileName: string}[];\n    FPs?: number; // Optional: to store the Function Points (FPs) for the Elementary Process\n}\n\n// Regex para capturar tabelas\nconst tableRegex = /CREATE TABLE IF NOT EXISTS\\s+\"([\\w_]+)\"\\s*\\(([\\s\\S]+?)\\);/g;\n\n// Regex para capturar colunas dentro da definição da tabela\nconst columnRegex = /\"([\\w_]+)\"\\s+([\\w]+)/g;\n\n\n\nexport class FPAnalysis{\n    private logicalFiles: LogicalFile[] = [];\n    private elementaryProcesses: ElementaryProcess[] = [];\n    /*constructor(){\n    }*/\n\n    /**\n     * Parses the SQL script and extracts table names and their columns.\n     * *Resets the logicalFiles array before parsing.\n     */\n    public readSQL(sql: string): void{\n        this.logicalFiles = [];\n        let matchTable;\n\n        while ((matchTable = tableRegex.exec(sql)) !== null) {\n            const tableContent = matchTable[2].toString();\n            this.logicalFiles.push({\n                name: matchTable[1].toString(),\n                type: LFType.InternalLogicalFile, // Default type for parsed tables\n                dataElements: []\n            });\n\n            let matchColumn;\n            while ((matchColumn = columnRegex.exec(tableContent)) !== null) {\n                this.logicalFiles[this.logicalFiles.length - 1].dataElements.push(\n                    {\n                        name: matchColumn[1].toString(),\n                        dtype: matchColumn[2].toString()\n                    }\n                );\n            }\n        }\n    }\n\n    /**\n     * Adds a Logical File (LF) to the analysis.\n     * @param name - The name of the Logical File.\n     * @param type - The type of the Logical File (Internal Logical File, External Interface File, or Record Element Type).\n     * @param attributes - An array of attributes for the Logical File.\n     * @param description - (Optional) Description for the Logical File.\n     */\n    public addLF(name: string, type: LFType, attributes: DataElement[], description?: string, parentName?: string): void {\n        // Verifica se já existe um LF com o mesmo nome\n        if (this.logicalFiles.some(lf => lf.name === name)) {\n            console.warn(`Logical File with name \"${name}\" already exists. Skipping addition.`);\n            return;\n        }\n\n        this.logicalFiles.push({\n            name: name,\n            type: type,\n            dataElements: attributes,\n            description: description,\n            parentName: parentName\n        });\n    }\n\n    /**\n     * Adds or updates the description of an existing Logical File (LF).\n     * @param lfName - The name of the Logical File.\n     * @param description - The description to set.\n     */\n    public addDescriptionToLF(lfName: string, description: string): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot add description.`);\n            return;\n        }\n        lf.description = description;\n    }\n\n    /**\n     * Adds an attribute to an existing Logical File (LF).\n     * @param lfName - The name of the Logical File to which the attribute will be added.\n     * @param dataElement - The data element to be added.\n     */\n    public addDataElementToLF(lfName: string, dataElement: DataElement): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verifica se o LF existe\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot add data element.`);\n            return;\n        }\n\n        // Verifica se o data element já existe\n        if (lf.dataElements.some(attr => attr.name === dataElement.name)) {\n            console.warn(`Data Element \"${dataElement.name}\" already exists in Logical File \"${lfName}\". Skipping addition.`);\n            return;\n        }\n\n        lf.dataElements.push(dataElement);\n    }\n\n    /**\n     * Removes a Logical File (LF) from the analysis.\n     * @param name - The name of the Logical File to remove.\n     */\n    public removeLF(name: string): void {\n        // Goes through all the Elementary Processes and removes any reference to the LF being removed\n        this.elementaryProcesses.forEach(ep => {\n            ep.dataElements = ep.dataElements.filter(lf => lf.name !== name);\n        });\n\n        // Goes through all the Logical Files and removes all the record element types (RET) that reference the LF being removed\n        this.logicalFiles = this.logicalFiles.filter(lf => (lf.type !== LFType.RecordElementType && lf.parentName !== name));\n\n        // Removes the Logical File from the logicalFiles array\n        this.logicalFiles = this.logicalFiles.filter(lf => lf.name !== name);\n    }\n\n    \n    /**\n     * Removes an attribute from a Logical File (LF).\n     * @param lfName - The name of the Logical File from which the attribute will be removed.\n     * @param dataElement - The name of the attribute to be removed.\n     */\n    public removeDataElementFromLF(lfName: string, dataElement: string): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verify if the Logical File exists\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot remove data element.`);\n            return;\n        }\n\n        // Update the Elementary Processes to remove references to the data element\n        this.elementaryProcesses.forEach(ep => {\n            ep.dataElements = ep.dataElements.filter(de => {\n                return !(de.logicalFileName === lfName && de.name === dataElement);\n            });\n        });\n\n        // Remove the data element from the Logical File\n        lf.dataElements = lf.dataElements.filter(attr => attr.name !== dataElement);\n    }\n\n    /**\n     * Retrieves the list of Logical Files (LFs).\n     * @returns An array of Logical Files.\n     */\n    public getLFs(){\n        return this.logicalFiles;\n    }\n\n    /**\n     * Adds an Elementary Process (EP) to the analysis.\n     * @param description - A description of the Elementary Process.\n     * @param type - The type of the Elementary Process (External Input, External Output, or External Inquiry).\n     * @param logicalFiles - An array of Logical Files referenced by the Elementary Process.\n     */\n    public addEP(description: string, type: EPType, dataElements: {name: string, logicalFileName: string}[]): void{\n        // Verify if the referenced Logical Files and Attributes exist\n        for (const {name, logicalFileName} of dataElements) {\n            const lf = this.logicalFiles.find(lf => lf.name === logicalFileName);\n\n            // Verify if the Logical File exists\n            if (!lf) {\n                console.error(`Logical File \"${logicalFileName}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                return;\n            }\n            // Verify if the Data Element exists in the Logical File\n            for (const DataElement of lf.dataElements) {\n                if (!lf.dataElements.some(existingDE => existingDE.name === DataElement.name)) {\n                    console.error(`Data Element \"${DataElement.name}\" in Logical File \"${logicalFileName}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                    return;\n                }\n            }\n        }\n\n        const newId = `${type}_${this.elementaryProcesses.filter(ep => ep.type === type).length + 1}`;\n\n        this.elementaryProcesses.push({\n            id: newId,\n            description: description,\n            type: type,\n            dataElements: dataElements\n        });\n    }\n\n    /**\n     * Retrieves the list of Elementary Processes (EPs).\n     * @returns An array of Elementary Processes.\n     */\n    public getEPs(){\n        return this.elementaryProcesses;\n    }\n\n    /**\n     * Removes an Elementary Process (EP) from the analysis.\n     * @param description - The description of the Elementary Process to remove.\n     */\n    public removeEP(id: string): void {\n        // Remove the Elementary Process from the elementaryProcesses array\n        this.elementaryProcesses = this.elementaryProcesses.filter(ep => ep.id !== id);\n    }\n\n    /**\n     * Removes Data Element Types (DETs) from an Elementary Process (EP).\n     * @param epId - The ID of the Elementary Process.\n     * @param logicalFileName - The name of the Logical File.\n     * @param dataElementName - The name of the attribute to remove.\n     */\n    public removeDETsFromEP(epId: string, logicalFileName: string, dataElementName: string): void {\n        const ep = this.elementaryProcesses.find(ep => ep.id === epId);\n\n        // Verify if the Elementary Process exists\n        if (!ep) {\n            console.error(`Elementary Process \"${epId}\" not found. Cannot remove DET.`);\n            return;\n        }\n\n        // Remove the Data Element Type (DET) from the Elementary Process\n        ep.dataElements = ep.dataElements.filter(de => !(de.logicalFileName === logicalFileName && de.name === dataElementName));\n    }\n\n    /**\n     * Adds a Data Element Type (DET) to an Elementary Process (EP).\n     * @param epId - The ID of the Elementary Process.\n     * @param dataElement - The data element to add.\n     */\n    public addDETToEP(epId: string, dataElement: {name: string, logicalFileName: string}): void {\n        const ep = this.elementaryProcesses.find(ep => ep.id === epId);\n\n        // Verify if the Elementary Process exists\n        if (!ep) {\n            console.error(`Elementary Process \"${epId}\" not found. Cannot add DET.`);\n            return;\n        }\n\n        // Verify if the referenced Logical File and Attribute exist\n        const lf = this.logicalFiles.find(lf => lf.name === dataElement.logicalFileName);\n        if (!lf) {\n            console.error(`Logical File \"${dataElement.logicalFileName}\" referenced in Elementary Process \"${ep.description}\" does not exist.`);\n            return;\n        }\n        if (!lf.dataElements.some(existingDE => existingDE.name === dataElement.name)) {\n            console.error(`Data Element \"${dataElement.name}\" in Logical File \"${dataElement.logicalFileName}\" referenced in Elementary Process \"${ep.description}\" does not exist.`);\n            return;\n        }\n\n        // Verify if the DET already exists in the EP\n        if (ep.dataElements.some(det => det.logicalFileName === dataElement.logicalFileName && det.name === dataElement.name)) {\n            console.warn(`DET \"${dataElement.name}\" from \"${dataElement.logicalFileName}\" already exists in EP \"${epId}\". Skipping addition.`);\n            return;\n        }\n\n        ep.dataElements.push(dataElement);\n    }\n\n    /**\n     * Evaluates the Function Points (FPs) based on the current Logical Files and Elementary Processes.\n     */\n    public evaluateFPs(): void {\n        // Reset FPs for all Logical Files and Elementary Processes\n        this.logicalFiles.forEach(lf => lf.FPs = 0);\n        this.elementaryProcesses.forEach(ep => ep.FPs = 0);\n\n        // Calculate FPs for Logical Files\n        this.logicalFiles.forEach(lf => {\n            if (lf.type === LFType.RecordElementType) {\n                return; // Skip Record Element Types (RET) for FP calculation\n            }\n            \n            let nRETs = 1; // Count the Logical File itself as one RET\n            let RETsDTs = 0;\n            let complexity = \"Low\";\n\n            this.logicalFiles.forEach(otherLF => {\n                if (otherLF.type === LFType.RecordElementType && otherLF.parentName === lf.name) {\n                    nRETs++;\n                    RETsDTs += otherLF.dataElements.length;\n                }\n            });\n\n            if (nRETs === 1) {\n                complexity = lf.dataElements.length + RETsDTs < 50 ? \"Low\" : \"Average\" ;\n            } else if (nRETs <= 5) {\n                complexity = lf.dataElements.length + RETsDTs < 20 ? \"Low\" : \"Average\" ;\n                complexity = lf.dataElements.length + RETsDTs < 50 ? complexity : \"High\" ;\n            } else{\n                complexity = lf.dataElements.length + RETsDTs < 50 ? \"Average\" : \"High\";\n            }\n\n            lf.FPs = lf.type === LFType.InternalLogicalFile ? ILFContribution(complexity) : EIFContribution(complexity);\n        });\n\n        // Calculate FPs for Elementary Processes\n        this.elementaryProcesses.forEach(ep => {\n            // Initialize the complexity of the EP\n            let complexity = \"Low\";\n            // Calculates the number of Logical Files (LFs) referenced by the Elementary Process (EP)\n            const nLFs = new Set(ep.dataElements.map(de => de.logicalFileName)).size;\n            // Calculates the number of Data Element Types (DETs) referenced by the Elementary Process (EP)\n            const nDETs = ep.dataElements.length;\n\n            if (ep.type === EPType.ExternalInput) {\n                if (nLFs === 1) {\n                    complexity = nDETs < 5 ? \"Low\" : \"Average\";\n                } else if (nLFs === 2) {\n                    complexity = nDETs < 5 ? \"Low\" : nDETs < 15 ? \"Average\" : \"High\";\n                } else {\n                    complexity = nDETs < 15 ? \"Average\" : \"High\";\n                }\n\n            } else {\n                if (nLFs === 1) {\n                    complexity = nDETs < 20 ? \"Low\" : \"Average\";\n                } else if (nLFs === 2) {\n                    complexity = nDETs < 7 ? \"Low\" : nDETs < 20 ? \"Average\" : \"High\";\n                } else {\n                    complexity = nDETs < 20 ? \"Average\" : \"High\";\n                }\n            }\n\n            ep.FPs = ep.type === EPType.ExternalInquiry ? EQContribution(complexity) : EIandEOContribution(complexity);\n        });\n    }\n\n/**\n     * Retrieves the total Function Points (FPs) from Logical Files and Elementary Processes.\n     * @returns The total Function Points (FPs).\n     */\n    public getTotalFPs(): number {\n        // Calculate the total Function Points (FPs) from Logical Files and Elementary Processes\n        const totalLFsFPs = this.logicalFiles.reduce((sum, lf) => sum + (lf.FPs || 0), 0);\n        const totalEPsFPs = this.elementaryProcesses.reduce((sum, ep) => sum + (ep.FPs || 0), 0);\n        return totalLFsFPs + totalEPsFPs;\n    }\n\n    /**\n     * Goes through all Logical Files (LFs) and optimizes them based on predefined criteria.\n     * This method is important for maintaining the efficiency and accuracy of the Function Point Analysis, removing unnecessary redundant or incomplete Logical Files.\n     * \n     * Optimization is based on the following criteria:\n     * 1. If a Logical File (LF) has no attributes, it is removed\n     * 2. If a Logical File (LF) has no associated Elementary Processes (EPs), it is removed\n     * 3. If a Logical File (LF) is a Record Element Type (RET) and has no parent Logical File, it is removed\n     * 4. If a Logical File (LF) is based on a Weak Entity, it becomes a Record Element Type (RET) and is associated with its parent Logical File\n     * 5. If two Logical Files (LFs) have a 1:1 relationship and are involved in the same Elementary Processes (EP) as one another, they are merged into a single Logical File (LF) with the attributes of both Logical Files (LFs)\n     * 5. If two \n     */\n    public optimizeLFs(): void {\n        return;\n    }\n\n    public exportAsJSON(): JSON {\n        return JSON.parse(JSON.stringify({\n            logicalFiles: this.logicalFiles,\n            elementaryProcesses: this.elementaryProcesses\n        }));\n    }\n\n    public importFromJSON(data: JSON): void {\n        const parsedData = JSON.parse(JSON.stringify(data));\n        this.logicalFiles = parsedData.logicalFiles || [];\n        this.elementaryProcesses = parsedData.elementaryProcesses || [];\n    }\n}","import { render } from \"./LogicalFiles.vue?vue&type=template&id=a3e633aa&scoped=true&ts=true\"\nimport script from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\nexport * from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\n\nimport \"./LogicalFiles.vue?vue&type=style&index=0&id=a3e633aa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a3e633aa\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"ep-container\" }\nconst _hoisted_2 = { class: \"add-ep-section\" }\nconst _hoisted_3 = { class: \"new-ep-form\" }\nconst _hoisted_4 = { class: \"form-row\" }\nconst _hoisted_5 = { class: \"form-group\" }\nconst _hoisted_6 = { class: \"form-group\" }\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"form-actions\" }\nconst _hoisted_9 = [\"disabled\"]\nconst _hoisted_10 = { class: \"ep-list-section\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"no-eps-message\"\n}\nconst _hoisted_12 = {\n  key: 1,\n  class: \"ep-grid\"\n}\nconst _hoisted_13 = { class: \"ep-table\" }\nconst _hoisted_14 = { class: \"table-title\" }\nconst _hoisted_15 = { colspan: \"3\" }\nconst _hoisted_16 = [\"onClick\"]\nconst _hoisted_17 = { class: \"det-name\" }\nconst _hoisted_18 = { class: \"det-type\" }\nconst _hoisted_19 = { class: \"det-actions\" }\nconst _hoisted_20 = [\"onClick\"]\nconst _hoisted_21 = {\n  key: 0,\n  class: \"add-det-row\"\n}\nconst _hoisted_22 = [\"onUpdate:modelValue\"]\nconst _hoisted_23 = [\"value\"]\nconst _hoisted_24 = [\"onUpdate:modelValue\", \"disabled\"]\nconst _hoisted_25 = [\"value\"]\nconst _hoisted_26 = { class: \"det-actions\" }\nconst _hoisted_27 = [\"onClick\", \"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"Add New Elementary Process\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _cache[3] || (_cache[3] = _createElementVNode(\"label\", { for: \"ep-description\" }, \"Description\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              id: \"ep-description\",\n              class: \"form-input\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.newEPDescription) = $event)),\n              placeholder: \"e.g., Register new user\"\n            }, null, 512), [\n              [_vModelText, _ctx.newEPDescription]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _cache[4] || (_cache[4] = _createElementVNode(\"label\", { for: \"ep-type\" }, \"Type\", -1)),\n            _withDirectives(_createElementVNode(\"select\", {\n              id: \"ep-type\",\n              class: \"form-input\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.newEPType) = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.EPType, (epType) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: epType,\n                  value: epType\n                }, _toDisplayString(epType), 9, _hoisted_7))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, _ctx.newEPType]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = \n//@ts-ignore\n(...args) => (_ctx.addEP && _ctx.addEP(...args))),\n              class: \"primary-button\",\n              disabled: !_ctx.newEPDescription.trim()\n            }, \"Add EP\", 8, _hoisted_9)\n          ])\n        ])\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_10, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Elementary Processes\", -1)),\n      (_ctx.elementaryProcesses.length === 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \" No elementary processes have been added yet. \"))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementaryProcesses, (ep) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: ep.id,\n                class: \"ep-card\"\n              }, [\n                _createElementVNode(\"table\", _hoisted_13, [\n                  _createElementVNode(\"thead\", null, [\n                    _createElementVNode(\"tr\", _hoisted_14, [\n                      _createElementVNode(\"th\", _hoisted_15, [\n                        _createElementVNode(\"span\", null, _toDisplayString(ep.description) + \" (\" + _toDisplayString(ep.id) + \") - \" + _toDisplayString(ep.type), 1),\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (_ctx.removeEP(ep.id)),\n                          class: \"danger-button small-button\",\n                          style: {\"float\":\"right\"}\n                        }, \"Remove EP\", 8, _hoisted_16)\n                      ])\n                    ]),\n                    _cache[6] || (_cache[6] = _createElementVNode(\"tr\", { class: \"column-header\" }, [\n                      _createElementVNode(\"th\", null, \"Logical File\"),\n                      _createElementVNode(\"th\", null, \"Data Element\"),\n                      _createElementVNode(\"th\", null, \"Actions\")\n                    ], -1))\n                  ]),\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ep.dataElements, (det) => {\n                      return (_openBlock(), _createElementBlock(\"tr\", {\n                        key: `${det.logicalFileName}_${det.name}`,\n                        class: \"det-row\"\n                      }, [\n                        _createElementVNode(\"td\", _hoisted_17, _toDisplayString(det.logicalFileName), 1),\n                        _createElementVNode(\"td\", _hoisted_18, _toDisplayString(det.name), 1),\n                        _createElementVNode(\"td\", _hoisted_19, [\n                          _createElementVNode(\"button\", {\n                            onClick: ($event: any) => (_ctx.removeDET(ep.id, det.logicalFileName, det.name)),\n                            class: \"danger-button small-button\"\n                          }, \"Remove\", 8, _hoisted_20)\n                        ])\n                      ]))\n                    }), 128)),\n                    (_ctx.detInputs[ep.id])\n                      ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_21, [\n                          _createElementVNode(\"td\", null, [\n                            _withDirectives(_createElementVNode(\"select\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((_ctx.detInputs[ep.id].logicalFile) = $event),\n                              class: \"attribute-input\"\n                            }, [\n                              _cache[7] || (_cache[7] = _createElementVNode(\"option\", {\n                                disabled: \"\",\n                                value: \"\"\n                              }, \"Select Logical File\", -1)),\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n                                return (_openBlock(), _createElementBlock(\"option\", {\n                                  key: lf.name,\n                                  value: lf.name\n                                }, _toDisplayString(lf.name), 9, _hoisted_23))\n                              }), 128))\n                            ], 8, _hoisted_22), [\n                              [_vModelSelect, _ctx.detInputs[ep.id].logicalFile]\n                            ])\n                          ]),\n                          _createElementVNode(\"td\", null, [\n                            _withDirectives(_createElementVNode(\"select\", {\n                              \"onUpdate:modelValue\": ($event: any) => ((_ctx.detInputs[ep.id].dataElement) = $event),\n                              class: \"attribute-input\",\n                              disabled: !_ctx.detInputs[ep.id].logicalFile\n                            }, [\n                              _cache[8] || (_cache[8] = _createElementVNode(\"option\", {\n                                disabled: \"\",\n                                value: \"\"\n                              }, \"Select Data Element\", -1)),\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.availableDETs[_ctx.detInputs[ep.id].logicalFile]?.dataElements, (de) => {\n                                return (_openBlock(), _createElementBlock(\"option\", {\n                                  key: de.name,\n                                  value: de.name\n                                }, _toDisplayString(de.name), 9, _hoisted_25))\n                              }), 128))\n                            ], 8, _hoisted_24), [\n                              [_vModelSelect, _ctx.detInputs[ep.id].dataElement]\n                            ])\n                          ]),\n                          _createElementVNode(\"td\", _hoisted_26, [\n                            _createElementVNode(\"button\", {\n                              onClick: ($event: any) => (_ctx.addDET(ep.id)),\n                              class: \"success-button small-button\",\n                              disabled: !_ctx.detInputs[ep.id].dataElement\n                            }, \"Add DET\", 8, _hoisted_27)\n                          ])\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n    ])\n  ]))\n}","<script lang=\"ts\">\nimport { computed, defineComponent, onUpdated, ref, watch } from 'vue';\nimport { FPAnalysis, EPType, LogicalFile } from '../assets/ts/FunctionPointAnalysis';\n\nexport default defineComponent({\n    name: 'ElementaryProcesses',\n    props: {\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        },\n        triggerRefresh: {\n            type: Number,\n            required: true,\n        }\n    },\n    emits: ['refreshEPs'],\n    \n    setup(props: { FPA: FPAnalysis; triggerRefresh: number }, { emit }) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        const forceUpdate = ref<number>(0);\n        const newEPDescription = ref('');\n        const newEPType = ref<EPType>(EPType.ExternalInput);\n        const detInputs = ref<Record<string, { logicalFile: string; dataElement: string }>>({});\n\n        // ==========================================\n        // EVENT HANDLERS\n        // ==========================================\n\n        watch(() => props.triggerRefresh, () => {\n            // Trigger a re-computation when the refresh trigger changes\n            forceUpdate.value++;\n        });\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        const elementaryProcesses = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value;\n            return props.FPA.getEPs();\n        });\n\n        const logicalFiles = computed(() => {\n            forceUpdate.value;\n            return props.FPA.getLFs();\n        });\n\n        const availableDETs = computed(() => {\n            const d: Record<string, LogicalFile> = {};\n            logicalFiles.value.forEach(lf => {\n                d[lf.name] = lf;\n            });\n            return d;\n        });\n\n        // ==========================================\n        // METHODS\n        // ==========================================\n\n        /**\n         * Guarantees reactivity for updates to elementary processes.\n         * This function is called whenever an EP is added or removed.\n         */\n        const outdatedEPs = () => {\n            forceUpdate.value++;\n            emit('refreshEPs');\n        };\n\n        const initializeDetInputs = () => {\n            elementaryProcesses.value.forEach(ep => {\n                if (!detInputs.value[ep.id]) {\n                    detInputs.value[ep.id] = { logicalFile: '', dataElement: '' };\n                }\n            });\n        };\n\n        const addEP = () => {\n            if (newEPDescription.value.trim()) {\n                props.FPA.addEP(newEPDescription.value, newEPType.value, []);\n                newEPDescription.value = '';\n                newEPType.value = EPType.ExternalInput;\n                outdatedEPs();\n                initializeDetInputs();\n            }\n        };\n\n        const removeEP = (epId: string) => {\n            props.FPA.removeEP(epId);\n            outdatedEPs();\n        };\n\n        const addDET = (epId: string) => {\n            const input = detInputs.value[epId];\n            if (input && input.logicalFile && input.dataElement) {\n                props.FPA.addDETToEP(epId, { name: input.dataElement, logicalFileName: input.logicalFile });\n                // Reset input for that EP\n                detInputs.value[epId] = { logicalFile: '', dataElement: '' };\n                outdatedEPs();\n            }\n        };\n\n        const removeDET = (epId: string, lfName: string, deName: string) => {\n            props.FPA.removeDETsFromEP(epId, lfName, deName);\n            outdatedEPs();\n        };\n\n        onUpdated(() => {\n            initializeDetInputs();\n        });\n\n        initializeDetInputs();\n\n        return {\n            elementaryProcesses,\n            logicalFiles,\n            availableDETs,\n            newEPDescription,\n            newEPType,\n            detInputs,\n            addEP,\n            removeEP,\n            addDET,\n            removeDET,\n            EPType,\n        };\n    },\n});\n</script>\n\n<template>\n    <div class=\"ep-container\">\n        <!-- ADD ELEMENTARY PROCESS SECTION -->\n        <section class=\"add-ep-section\">\n            <h2>Add New Elementary Process</h2>\n            <div class=\"new-ep-form\">\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"ep-description\">Description</label>\n                        <input type=\"text\" id=\"ep-description\" class=\"form-input\" v-model=\"newEPDescription\" placeholder=\"e.g., Register new user\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"ep-type\">Type</label>\n                        <select id=\"ep-type\" class=\"form-input\" v-model=\"newEPType\">\n                            <option v-for=\"epType in EPType\" :key=\"epType\" :value=\"epType\">{{ epType }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-actions\">\n                        <button @click=\"addEP\" class=\"primary-button\" :disabled=\"!newEPDescription.trim()\">Add EP</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- ELEMENTARY PROCESSES LIST SECTION -->\n        <section class=\"ep-list-section\">\n            <h2>Elementary Processes</h2>\n            <div v-if=\"elementaryProcesses.length === 0\" class=\"no-eps-message\">\n                No elementary processes have been added yet.\n            </div>\n            <div class=\"ep-grid\" v-else>\n                <div v-for=\"ep in elementaryProcesses\" :key=\"ep.id\" class=\"ep-card\">\n                    <table class=\"ep-table\">\n                        <thead>\n                            <tr class=\"table-title\">\n                                <th colspan=\"3\">\n                                    <span>{{ ep.description }} ({{ ep.id }}) - {{ ep.type }}</span>\n                                    <button @click=\"removeEP(ep.id)\" class=\"danger-button small-button\" style=\"float: right;\">Remove EP</button>\n                                </th>\n                            </tr>\n                            <tr class=\"column-header\">\n                                <th>Logical File</th>\n                                <th>Data Element</th>\n                                <th>Actions</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr v-for=\"det in ep.dataElements\" :key=\"`${det.logicalFileName}_${det.name}`\" class=\"det-row\">\n                                <td class=\"det-name\">{{ det.logicalFileName }}</td>\n                                <td class=\"det-type\">{{ det.name }}</td>\n                                <td class=\"det-actions\">\n                                    <button @click=\"removeDET(ep.id, det.logicalFileName, det.name)\" class=\"danger-button small-button\">Remove</button>\n                                </td>\n                            </tr>\n                            <!-- ADD DET ROW -->\n                            <tr class=\"add-det-row\" v-if=\"detInputs[ep.id]\">\n                                <td>\n                                    <select v-model=\"detInputs[ep.id].logicalFile\" class=\"attribute-input\">\n                                        <option disabled value=\"\">Select Logical File</option>\n                                        <option v-for=\"lf in logicalFiles\" :key=\"lf.name\" :value=\"lf.name\">{{ lf.name }}</option>\n                                    </select>\n                                </td>\n                                <td>\n                                    <select v-model=\"detInputs[ep.id].dataElement\" class=\"attribute-input\" :disabled=\"!detInputs[ep.id].logicalFile\">\n                                        <option disabled value=\"\">Select Data Element</option>\n                                        <option v-for=\"de in availableDETs[detInputs[ep.id].logicalFile]?.dataElements\" :key=\"de.name\" :value=\"de.name\">\n                                            {{ de.name }}\n                                        </option>\n                                    </select>\n                                </td>\n                                <td class=\"det-actions\">\n                                    <button @click=\"addDET(ep.id)\" class=\"success-button small-button\" :disabled=\"!detInputs[ep.id].dataElement\">Add DET</button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.ep-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.ep-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.ep-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-blue);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   ADD EP SECTION\n   ========================================== */\n\n.add-ep-section {\n    border-left: 4px solid var(--color-blue);\n}\n\n.new-ep-form {\n    background-color: #f8f9fa;\n    padding: 20px;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.form-row {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    align-items: end;\n}\n\n.form-group {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.form-group label {\n    font-weight: 500;\n    color: var(--color-gray);\n    font-size: 0.9em;\n}\n\n.form-input {\n    padding: 10px;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n    outline: none;\n    border-color: var(--color-blue);\n    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);\n}\n\n.form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n/* ==========================================\n   EP LIST SECTION\n   ========================================== */\n\n.ep-list-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-eps-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.ep-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.ep-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.ep-table th,\n.ep-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.det-row:hover {\n    background-color: #f8f9fa;\n}\n\n.det-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.det-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.det-actions {\n    text-align: center;\n}\n\n.add-det-row {\n    background-color: #f0f8ff;\n    border-top: 2px solid var(--color-blue);\n}\n\n.attribute-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.attribute-input:focus {\n    outline: none;\n    border-color: var(--color-blue);\n    box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.1);\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-blue), #3498db);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #3498db, var(--color-blue));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .ep-container {\n        padding: 10px;\n    }\n    \n    .ep-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        align-items: stretch;\n    }\n    \n    .ep-table {\n        font-size: 0.9em;\n    }\n    \n    .ep-table th,\n    .ep-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .ep-container section {\n        padding: 15px;\n    }\n    \n    .ep-table {\n        border-width: 1px;\n    }\n    \n    .attribute-input {\n        padding: 6px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n</style>","import { render } from \"./ElementaryProcesses.vue?vue&type=template&id=0fabf588&scoped=true&ts=true\"\nimport script from \"./ElementaryProcesses.vue?vue&type=script&lang=ts\"\nexport * from \"./ElementaryProcesses.vue?vue&type=script&lang=ts\"\n\nimport \"./ElementaryProcesses.vue?vue&type=style&index=0&id=0fabf588&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0fabf588\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"logical-files-container\" }\nconst _hoisted_2 = { class: \"logical-files-section\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"no-files-message\"\n}\nconst _hoisted_4 = {\n  key: 1,\n  class: \"logical-files-grid\"\n}\nconst _hoisted_5 = {\n  colspan: \"2\",\n  class: \"table-title\"\n}\nconst _hoisted_6 = [\"title\"]\nconst _hoisted_7 = {\n  colspan: \"2\",\n  class: \"table-title\"\n}\nconst _hoisted_8 = { key: 0 }\nconst _hoisted_9 = {\n  colspan: \"3\",\n  class: \"lf-description-cell\"\n}\nconst _hoisted_10 = { class: \"dataElement-name\" }\nconst _hoisted_11 = { class: \"dataElement-type\" }\nconst _hoisted_12 = { class: \"elementary-processes-section\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"no-files-message\"\n}\nconst _hoisted_14 = {\n  key: 1,\n  class: \"logical-files-grid\"\n}\nconst _hoisted_15 = {\n  colspan: \"3\",\n  class: \"table-title\"\n}\nconst _hoisted_16 = { class: \"card-name\" }\nconst _hoisted_17 = { class: \"FPs-contribution\" }\nconst _hoisted_18 = { class: \"dataElement-name\" }\nconst _hoisted_19 = { class: \"dataElement-type\" }\nconst _hoisted_20 = { class: \"end-of-analysis-section\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Logical Files\", -1)),\n      (!_ctx.logicalFiles.length)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[2] || (_cache[2] = [\n            _createElementVNode(\"p\", null, \"No logical files found. Parse SQL code or add files manually.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n              return (_openBlock(), _createElementBlock(\"table\", {\n                key: lf.name,\n                class: \"logical-file-table\"\n              }, [\n                _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", _hoisted_5, [\n                      _createElementVNode(\"button\", {\n                        class: \"alert-button small-button\",\n                        title: `Remove ${lf.name}`\n                      }, _toDisplayString(lf.type), 9, _hoisted_6),\n                      _createTextVNode(\" \" + _toDisplayString(lf.name), 1)\n                    ]),\n                    _createElementVNode(\"th\", _hoisted_7, _toDisplayString(lf.FPs), 1)\n                  ]),\n                  (lf.description)\n                    ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_8, [\n                        _createElementVNode(\"td\", _hoisted_9, [\n                          _createElementVNode(\"em\", null, _toDisplayString(lf.description), 1)\n                        ])\n                      ]))\n                    : _createCommentVNode(\"\", true),\n                  _cache[3] || (_cache[3] = _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n                  ], -1))\n                ]),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lf.dataElements, (dataElement) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: dataElement.name,\n                      class: \"dataElement-row\"\n                    }, [\n                      _createElementVNode(\"td\", _hoisted_10, _toDisplayString(dataElement.name), 1),\n                      _createElementVNode(\"td\", _hoisted_11, _toDisplayString(dataElement.dtype), 1)\n                    ]))\n                  }), 128))\n                ])\n              ]))\n            }), 128))\n          ]))\n    ]),\n    _createElementVNode(\"section\", _hoisted_12, [\n      _cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Elementary Processes\", -1)),\n      (!_ctx.elementaryProcesses.length)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, _cache[5] || (_cache[5] = [\n            _createElementVNode(\"p\", null, \"No elementary processes found. Parse SQL code or add processes manually.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.elementaryProcesses, (ep) => {\n              return (_openBlock(), _createElementBlock(\"table\", {\n                key: ep.description,\n                class: \"logical-file-table\"\n              }, [\n                _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", _hoisted_15, [\n                      _createElementVNode(\"div\", _hoisted_16, _toDisplayString(ep.description), 1),\n                      _createElementVNode(\"div\", _hoisted_17, _toDisplayString(ep.FPs), 1)\n                    ])\n                  ]),\n                  _cache[6] || (_cache[6] = _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Name\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Data Element Type\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n                  ], -1))\n                ]),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(ep.dataElements, (dataElement) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: dataElement.name,\n                      class: \"dataElement-row\"\n                    }, [\n                      _createElementVNode(\"td\", _hoisted_18, _toDisplayString(dataElement.name), 1),\n                      _createElementVNode(\"td\", _hoisted_19, _toDisplayString(dataElement.logicalFileName), 1)\n                    ]))\n                  }), 128))\n                ])\n              ]))\n            }), 128))\n          ]))\n    ]),\n    _createElementVNode(\"section\", _hoisted_20, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"End of Analysis\", -1)),\n      _cache[10] || (_cache[10] = _createElementVNode(\"p\", null, \" This section summarizes the Function Point Analysis results, including the total number of logical files, elementary processes, and their contributions to the overall function points. \", -1)),\n      _createElementVNode(\"p\", null, [\n        _createTextVNode(\" Total Logical Files: \" + _toDisplayString(_ctx.logicalFiles.length), 1),\n        _cache[8] || (_cache[8] = _createElementVNode(\"br\", null, null, -1)),\n        _createTextVNode(\" Total Elementary Processes: \" + _toDisplayString(_ctx.elementaryProcesses.length), 1)\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"primary-button\",\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.downloadJSON && _ctx.downloadJSON(...args)))\n      }, \" Download JSON \"),\n      _cache[11] || (_cache[11] = _createElementVNode(\"input\", {\n        type: \"file\",\n        id: \"fileInput\"\n      }, null, -1)),\n      _createElementVNode(\"button\", {\n        class: \"primary-button\",\n        onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.importFromJSON && _ctx.importFromJSON(...args)))\n      }, \" Import from JSON \")\n    ])\n  ]))\n}","<script lang=\"ts\">\nimport { defineComponent, ref, watch, computed, onMounted } from 'vue';\nimport { FPAnalysis, type DataElement, LFType } from '../assets/ts/FunctionPointAnalysis';\n\n\nexport default defineComponent({\n    name: 'EndOfAnalysis',\n    props: {\n        /** Function Point Analysis instance for managing logical files */\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        },\n        /** Trigger value to force component refresh from parent */\n        refreshTrigger: {\n            type: Number,\n            default: 0\n        }\n    },\n    emits: ['refreshLFs', 'refreshEPs'],\n\n    setup(props, { emit }) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        /** Force reactivity trigger for computed properties */\n        const forceUpdate = ref<number>(0);\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        /** \n         * Computed property for logical files with forced reactivity\n         * @returns Array of logical files from FPA instance\n         */\n        const logicalFiles = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value; // Trigger reactivity\n            props.FPA.evaluateFPs();\n            return props.FPA.getLFs();\n        });\n\n        const elementaryProcesses = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value;\n            props.FPA.evaluateFPs();\n            return props.FPA.getEPs();\n        });\n\n        watch(() => props.refreshTrigger, () => {\n            // Force update when refreshTrigger changes\n            forceUpdate.value++;\n        });\n\n        function downloadJSON() {\n            const blob = new Blob([JSON.stringify(props.FPA.exportAsJSON())], { type: 'application/json' });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'Function Point Analysis.json';\n            a.click();\n            URL.revokeObjectURL(url);\n        }\n\n        function importFromJSON() {\n            const input = document.getElementById('fileInput') as HTMLInputElement;\n            if (input.files && input.files.length > 0) {\n                const file = input.files[0];\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    try {\n                        const data = JSON.parse(e.target?.result as string);\n                        props.FPA.importFromJSON(data);\n                        forceUpdate.value++;\n                        emit('refreshLFs');\n                        emit('refreshEPs');\n                    } catch (error) {\n                        console.error('Error importing JSON:', error);\n                    }\n                };\n                reader.readAsText(file);\n            }\n        }\n\n        return {\n            // Computed\n            logicalFiles,\n            elementaryProcesses,\n\n            // Methods\n            downloadJSON,\n            importFromJSON,\n\n            // Form Options\n            LFType: LFType,\n        };\n    }\n});\n</script>\n\n<template>\n    <div class=\"logical-files-container\">\n\n        <!-- Logical Files Display Section -->\n        <section class=\"logical-files-section\">\n            <h2>Logical Files</h2>\n            <!-- Display message when no logical files exist -->\n            <div v-if=\"!logicalFiles.length\" class=\"no-files-message\">\n                <p>No logical files found. Parse SQL code or add files manually.</p>\n            </div>\n            <!-- Logical Files Tables -->\n            <div v-else class=\"logical-files-grid\">\n                <table \n                    v-for=\"lf in logicalFiles\" \n                    :key=\"lf.name\" \n                    class=\"logical-file-table\"\n                >\n                    <!-- Table Header -->\n                    <thead>\n                        <tr>\n                            <th colspan=\"2\" class=\"table-title\">\n                                <button \n                                    class=\"alert-button small-button\"\n                                    :title=\"`Remove ${lf.name}`\"\n                                >\n                                    {{ lf.type }}\n                                </button>\n                                {{ lf.name }}\n                            </th>\n                            <th colspan=\"2\" class=\"table-title\">\n                                {{ lf.FPs }}\n                            </th>\n                        </tr>\n                        <tr v-if=\"lf.description\">\n                            <td colspan=\"3\" class=\"lf-description-cell\">\n                                <em>{{ lf.description }}</em>\n                            </td>\n                        </tr>\n                        <tr>\n                            <th class=\"column-header\">Data Element Name</th>\n                            <th class=\"column-header\">Data Element Type</th>\n                            <th class=\"column-header\">Actions</th>\n                        </tr>\n                    </thead>\n\n                    <!-- Table Body -->\n                    <tbody>\n                        <!-- Existing Data Elements -->\n                        <tr \n                            v-for=\"dataElement in lf.dataElements\" \n                            :key=\"dataElement.name\"\n                            class=\"dataElement-row\"\n                        >\n                            <td class=\"dataElement-name\">{{ dataElement.name }}</td>\n                            <td class=\"dataElement-type\">{{ dataElement.dtype }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </section>\n\n        <section class=\"elementary-processes-section\">\n            <h2>Elementary Processes</h2>\n            <div v-if=\"!elementaryProcesses.length\" class=\"no-files-message\">\n                <p>No elementary processes found. Parse SQL code or add processes manually.</p>\n            </div>\n            <div v-else class=\"logical-files-grid\">\n                <table \n                    v-for=\"ep in elementaryProcesses\" \n                    :key=\"ep.description\" \n                    class=\"logical-file-table\"\n                >\n                    <thead>\n                        <tr>\n                            <th colspan=\"3\" class=\"table-title\">\n                                <div class=\"card-name\">\n                                    {{ ep.description }}\n                                </div>\n                                <div class=\"FPs-contribution\">\n                                    {{ ep.FPs }}\n                                </div>\n                            </th>\n                        </tr>\n                        <tr>\n                            <th class=\"column-header\">Data Element Name</th>\n                            <th class=\"column-header\">Data Element Type</th>\n                            <th class=\"column-header\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr \n                            v-for=\"dataElement in ep.dataElements\" \n                            :key=\"dataElement.name\"\n                            class=\"dataElement-row\"\n                        >\n                            <td class=\"dataElement-name\">{{ dataElement.name }}</td>\n                            <td class=\"dataElement-type\">{{ dataElement.logicalFileName }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        </section>\n\n        <section class=\"end-of-analysis-section\">\n            <h2>End of Analysis</h2>\n            <p>\n                This section summarizes the Function Point Analysis results, including the total number of logical files, elementary processes, and their contributions to the overall function points.\n            </p>\n            <p>\n                Total Logical Files: {{ logicalFiles.length }}<br />\n                Total Elementary Processes: {{ elementaryProcesses.length }}\n            </p>\n            <button\n                class=\"primary-button\"\n                @click=\"downloadJSON\"\n            >\n                Download JSON\n            </button>\n\n            <input type=\"file\" id=\"fileInput\" />\n            <button\n                class=\"primary-button\"\n                @click=\"importFromJSON\"\n            >\n                Import from JSON\n            </button>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.logical-files-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.logical-files-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.logical-files-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-green);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   LOGICAL FILES SECTION\n   ========================================== */\n\n.logical-files-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-files-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.logical-files-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.logical-file-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.logical-file-table th,\n.logical-file-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.dataElement-row:hover {\n    background-color: #f8f9fa;\n}\n\n.dataElement-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.dataElement-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.dataElement-actions {\n    text-align: center;\n}\n\n.add-dataElement-row {\n    background-color: #f0f8f0;\n    border-top: 2px solid var(--color-green);\n}\n\n.dataElement-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.dataElement-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 2px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n.card-name {\n    font-weight: bold;\n    color: var(--color-white-cream);\n    font-size: 1.2em;\n}\n\n.FPs-contribution {\n    font-weight: bold;\n    color: var(--color-white-cream);\n    font-size: 1.2em;\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button,\n.alert-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45a049, var(--color-green));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.alert-button {\n    background: linear-gradient(135deg, #e0aa09, #ffca2c);\n    color: white;\n}\n\n.alert-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #ffca2c, #e0aa09);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .logical-files-container {\n        padding: 10px;\n    }\n    \n    .logical-files-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        gap: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.9em;\n    }\n    \n    .logical-file-table th,\n    .logical-file-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .logical-files-container section {\n        padding: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.8em;\n    }\n    \n    .dataElement-input {\n        font-size: 12px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button,\n    .alert-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n\n/* ==========================================\n   ACCESSIBILITY IMPROVEMENTS\n   ========================================== */\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        transition: none !important;\n        animation: none !important;\n    }\n}\n\n.sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n}\n\n.lf-description-cell {\n    background-color: #f7f7e6;\n    color: #666;\n    font-size: 1em;\n    padding: 8px 12px;\n    border-bottom: 1px solid #e0e0e0;\n    text-align: left;\n}\n</style>","import { render } from \"./EndOfAnalysis.vue?vue&type=template&id=da646634&scoped=true&ts=true\"\nimport script from \"./EndOfAnalysis.vue?vue&type=script&lang=ts\"\nexport * from \"./EndOfAnalysis.vue?vue&type=script&lang=ts\"\n\nimport \"./EndOfAnalysis.vue?vue&type=style&index=0&id=da646634&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-da646634\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=378251a6&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=378251a6&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksimple_fpa\"] = self[\"webpackChunksimple_fpa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9821); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","_hoisted_2","class","_hoisted_3","_hoisted_4","key","_hoisted_5","render","_ctx","_cache","$props","$setup","$data","$options","_component_LogicalFiles","_resolveComponent","_component_ElementaryProcesses","_component_EndOfAnalysis","_openBlock","_createElementBlock","_createElementVNode","onClick","args","loadSampleData","_createVNode","FPA","fpaInstance","triggerRefresh","refreshLFs","onRefreshLFs","handleLFsUpdate","onRefreshEPs","handleEPsUpdate","showDebugInfo","_toDisplayString","currentLogicalFiles","length","JSON","stringify","lastUpdateTime","totalAttributes","_createCommentVNode","refreshTrigger","refreshEPs","toggleDebugInfo","_normalizeClass","active","_hoisted_6","_hoisted_7","_hoisted_8","colspan","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_withDirectives","$event","sqlInput","placeholder","rows","_vModelText","parseSQL","disabled","trim","logicalFiles","_Fragment","_renderList","lf","name","title","type","_createTextVNode","removeLogicalFile","description","dataElements","dataElement","dtype","removeDataElementFromLogicalFile","newDataElements","maxlength","addDataElementToLogicalFile","createNewLogicalFile","newLogicalFileForm","style","Object","values","LFType","value","_vModelSelect","RecordElementType","parentName","slice","index","splice","push","ILFContribution","complexity","Error","EIFContribution","EIandEOContribution","EQContribution","EPType","tableRegex","columnRegex","FPAnalysis","constructor","_defineProperty","readSQL","sql","matchTable","this","exec","tableContent","toString","matchColumn","InternalLogicalFile","addLF","attributes","some","console","warn","addDescriptionToLF","lfName","find","error","addDataElementToLF","attr","removeLF","elementaryProcesses","forEach","ep","filter","removeDataElementFromLF","de","logicalFileName","getLFs","addEP","DataElement","existingDE","newId","getEPs","removeEP","removeDETsFromEP","epId","dataElementName","addDETToEP","det","evaluateFPs","FPs","nRETs","RETsDTs","otherLF","nLFs","Set","map","size","nDETs","ExternalInput","ExternalInquiry","getTotalFPs","totalLFsFPs","reduce","sum","totalEPsFPs","optimizeLFs","exportAsJSON","parse","importFromJSON","data","parsedData","defineComponent","props","required","Number","default","emits","setup","emit","forceUpdate","ref","computed","initializeDataElementInputs","outdatedLFs","clearDataElementInput","log","addLogicalFile","undefined","filteredDataElements","watch","onMounted","__exports__","for","newEPDescription","newEPType","epType","removeDET","detInputs","logicalFile","availableDETs","addDET","d","outdatedEPs","initializeDetInputs","input","deName","onUpdated","downloadJSON","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","getElementById","files","file","reader","FileReader","onload","e","target","result","readAsText","components","LogicalFiles","ElementaryProcesses","EndOfAnalysis","total","Date","toLocaleTimeString","sampleSQL","newFiles","oldFiles","previous","current","difference","deep","register","ready","registered","cached","updatefound","updated","offline","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}
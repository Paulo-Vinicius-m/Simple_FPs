{"version":3,"file":"js/app.4e8592d3.js","mappings":"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","sources":["webpack://simple_fpa/./src/App.vue?efaf","webpack://simple_fpa/./src/App.vue","webpack://simple_fpa/./src/components/LogicalFiles.vue?d5ed","webpack://simple_fpa/./src/components/LogicalFiles.vue","webpack://simple_fpa/./src/assets/ts/LogicalFileFinder.ts","webpack://simple_fpa/./src/components/LogicalFiles.vue?8e33","webpack://simple_fpa/./src/App.vue?7ccd","webpack://simple_fpa/./src/registerServiceWorker.ts","webpack://simple_fpa/./src/main.ts","webpack://simple_fpa/webpack/bootstrap","webpack://simple_fpa/webpack/runtime/chunk loaded","webpack://simple_fpa/webpack/runtime/compat get default export","webpack://simple_fpa/webpack/runtime/define property getters","webpack://simple_fpa/webpack/runtime/global","webpack://simple_fpa/webpack/runtime/hasOwnProperty shorthand","webpack://simple_fpa/webpack/runtime/jsonp chunk loading","webpack://simple_fpa/webpack/startup"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { id: \"app\" }\nconst _hoisted_2 = { class: \"app-main\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"debug-section\"\n}\nconst _hoisted_4 = { class: \"app-footer\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_LogicalFiles = _resolveComponent(\"LogicalFiles\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _cache[3] || (_cache[3] = _createElementVNode(\"header\", { class: \"app-header\" }, [\n      _createElementVNode(\"h1\", null, \"Function Point Analysis Tool\"),\n      _createElementVNode(\"p\", null, \"Manage and analyze logical files for your software projects\")\n    ], -1)),\n    _createElementVNode(\"main\", _hoisted_2, [\n      _createVNode(_component_LogicalFiles, {\n        FPA: _ctx.fpaInstance,\n        refreshTrigger: _ctx.refreshCounter,\n        onReadSQL: _ctx.handleLogicalFilesUpdate\n      }, null, 8, [\"FPA\", \"refreshTrigger\", \"onReadSQL\"]),\n      (_ctx.showDebugInfo)\n        ? (_openBlock(), _createElementBlock(\"section\", _hoisted_3, [\n            _cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Debug Information\", -1)),\n            _createElementVNode(\"details\", null, [\n              _createElementVNode(\"summary\", null, \"Current Logical Files (\" + _toDisplayString(_ctx.currentLogicalFiles.length) + \")\", 1),\n              _createElementVNode(\"pre\", null, _toDisplayString(JSON.stringify(_ctx.currentLogicalFiles, null, 2)), 1)\n            ]),\n            _createElementVNode(\"details\", null, [\n              _cache[1] || (_cache[1] = _createElementVNode(\"summary\", null, \"Component State\", -1)),\n              _createElementVNode(\"ul\", null, [\n                _createElementVNode(\"li\", null, \"Refresh Counter: \" + _toDisplayString(_ctx.refreshCounter), 1),\n                _createElementVNode(\"li\", null, \"Last Update: \" + _toDisplayString(_ctx.lastUpdateTime), 1),\n                _createElementVNode(\"li\", null, \"Total Attributes: \" + _toDisplayString(_ctx.totalAttributes), 1)\n              ])\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"footer\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = \n//@ts-ignore\n(...args) => (_ctx.toggleDebugInfo && _ctx.toggleDebugInfo(...args))),\n        class: _normalizeClass([\"debug-toggle\", { active: _ctx.showDebugInfo }])\n      }, _toDisplayString(_ctx.showDebugInfo ? 'Hide' : 'Show') + \" Debug Info \", 3)\n    ])\n  ]))\n}","<!--\n  Example usage of the refactored LogicalFiles component\n  This file demonstrates best practices for integrating the component\n-->\n<template>\n  <div id=\"app\">\n    <header class=\"app-header\">\n      <h1>Function Point Analysis Tool</h1>\n      <p>Manage and analyze logical files for your software projects</p>\n    </header>\n\n    <main class=\"app-main\">\n      <!-- LogicalFiles Component Usage -->\n      <LogicalFiles \n        :FPA=\"fpaInstance\" \n        :refreshTrigger=\"refreshCounter\"\n        @readSQL=\"handleLogicalFilesUpdate\" \n      />\n\n      <!-- Debug Information (Remove in production) -->\n      <section v-if=\"showDebugInfo\" class=\"debug-section\">\n        <h2>Debug Information</h2>\n        <details>\n          <summary>Current Logical Files ({{ currentLogicalFiles.length }})</summary>\n          <pre>{{ JSON.stringify(currentLogicalFiles, null, 2) }}</pre>\n        </details>\n        <details>\n          <summary>Component State</summary>\n          <ul>\n            <li>Refresh Counter: {{ refreshCounter }}</li>\n            <li>Last Update: {{ lastUpdateTime }}</li>\n            <li>Total Attributes: {{ totalAttributes }}</li>\n          </ul>\n        </details>\n      </section>\n    </main>\n\n    <footer class=\"app-footer\">\n      <button \n        @click=\"toggleDebugInfo\" \n        class=\"debug-toggle\"\n        :class=\"{ active: showDebugInfo }\"\n      >\n        {{ showDebugInfo ? 'Hide' : 'Show' }} Debug Info\n      </button>\n    </footer>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, onMounted, watch } from 'vue';\nimport LogicalFiles from './components/LogicalFiles.vue';\nimport { FPAnalysis } from './assets/ts/LogicalFileFinder';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    LogicalFiles\n  },\n  setup() {\n    // Initialize FPA instance\n    const fpaInstance = new FPAnalysis();\n    \n    // Component state\n    const refreshCounter = ref(0);\n    const lastUpdateTime = ref<string>('');\n    const showDebugInfo = ref(false);\n\n    // Computed properties for debugging\n    const currentLogicalFiles = computed(() => {\n      return fpaInstance.getLFs();\n    });\n\n    const totalAttributes = computed(() => {\n      return currentLogicalFiles.value.reduce((total, lf) => {\n        return total + lf.attributes.length;\n      }, 0);\n    });\n\n    // Event handlers\n    const handleLogicalFilesUpdate = (): void => {\n      console.log('Logical files updated:', currentLogicalFiles.value);\n      lastUpdateTime.value = new Date().toLocaleTimeString();\n      refreshCounter.value++;\n    };\n\n    const toggleDebugInfo = (): void => {\n      showDebugInfo.value = !showDebugInfo.value;\n    };\n\n    // Sample data for testing (optional)\n    const loadSampleData = (): void => {\n      const sampleSQL = `\n        CREATE TABLE IF NOT EXISTS \"Users\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"username\" TEXT NOT NULL,\n            \"email\" TEXT NOT NULL,\n            \"created_at\" DATETIME DEFAULT CURRENT_TIMESTAMP,\n            PRIMARY KEY(\"id\")\n        );\n        \n        CREATE TABLE IF NOT EXISTS \"Posts\" (\n            \"id\" INTEGER NOT NULL UNIQUE,\n            \"user_id\" INTEGER NOT NULL,\n            \"title\" TEXT NOT NULL,\n            \"content\" TEXT,\n            \"published\" BOOLEAN DEFAULT FALSE,\n            \"created_at\" DATETIME DEFAULT CURRENT_TIMESTAMP,\n            PRIMARY KEY(\"id\"),\n            FOREIGN KEY(\"user_id\") REFERENCES \"Users\"(\"id\")\n        );\n      `;\n      \n      fpaInstance.readSQL(sampleSQL);\n      handleLogicalFilesUpdate();\n    };\n\n    // Watch for changes in logical files\n    watch(currentLogicalFiles, (newFiles, oldFiles) => {\n      console.log('Logical files changed:', {\n        previous: oldFiles?.length || 0,\n        current: newFiles.length,\n        difference: newFiles.length - (oldFiles?.length || 0)\n      });\n    }, { deep: true });\n\n    // Component lifecycle\n    onMounted(() => {\n      console.log('App component mounted');\n      // Uncomment to load sample data on startup\n      // loadSampleData();\n    });\n\n    return {\n      // Core functionality\n      fpaInstance,\n      refreshCounter,\n      handleLogicalFilesUpdate,\n      \n      // Debug features\n      showDebugInfo,\n      toggleDebugInfo,\n      currentLogicalFiles,\n      totalAttributes,\n      lastUpdateTime,\n      \n      // Utilities\n      loadSampleData\n    };\n  }\n});\n</script>\n\n<style>\n/* Global App Styles */\n#app {\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n}\n\n.app-header {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  padding: 2rem;\n  text-align: center;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.app-header h1 {\n  margin: 0 0 0.5rem 0;\n  font-size: 2.5rem;\n  font-weight: 700;\n}\n\n.app-header p {\n  margin: 0;\n  font-size: 1.2rem;\n  opacity: 0.9;\n}\n\n.app-main {\n  flex: 1;\n  padding: 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.debug-section {\n  margin-top: 3rem;\n  padding: 1.5rem;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border: 1px solid #dee2e6;\n}\n\n.debug-section h2 {\n  margin-top: 0;\n  color: #495057;\n}\n\n.debug-section details {\n  margin: 1rem 0;\n  background: white;\n  border-radius: 4px;\n  border: 1px solid #e9ecef;\n}\n\n.debug-section summary {\n  padding: 1rem;\n  cursor: pointer;\n  background: #f8f9fa;\n  border-radius: 4px 4px 0 0;\n  font-weight: 500;\n}\n\n.debug-section summary:hover {\n  background: #e9ecef;\n}\n\n.debug-section pre {\n  padding: 1rem;\n  margin: 0;\n  background: #f8f9fa;\n  border-radius: 0 0 4px 4px;\n  overflow-x: auto;\n  font-size: 0.9rem;\n}\n\n.debug-section ul {\n  padding: 1rem;\n  margin: 0;\n  list-style: none;\n}\n\n.debug-section li {\n  padding: 0.25rem 0;\n  border-bottom: 1px solid #e9ecef;\n}\n\n.debug-section li:last-child {\n  border-bottom: none;\n}\n\n.app-footer {\n  padding: 1rem;\n  text-align: center;\n  background: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n\n.debug-toggle {\n  padding: 0.5rem 1rem;\n  background: #6c757d;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.debug-toggle:hover {\n  background: #5a6268;\n  transform: translateY(-1px);\n}\n\n.debug-toggle.active {\n  background: #007bff;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n  .app-header {\n    padding: 1.5rem 1rem;\n  }\n  \n  .app-header h1 {\n    font-size: 2rem;\n  }\n  \n  .app-header p {\n    font-size: 1rem;\n  }\n  \n  .app-main {\n    padding: 1rem;\n  }\n}\n\n/* Dark mode support */\n@media (prefers-color-scheme: dark) {\n  .debug-section {\n    background: #343a40;\n    border-color: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section h2 {\n    color: #f8f9fa;\n  }\n  \n  .debug-section details {\n    background: #495057;\n    border-color: #6c757d;\n  }\n  \n  .debug-section summary {\n    background: #495057;\n    color: #f8f9fa;\n  }\n  \n  .debug-section summary:hover {\n    background: #6c757d;\n  }\n  \n  .debug-section pre {\n    background: #343a40;\n    color: #f8f9fa;\n  }\n}\n</style>\n","import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"logical-files-container\" }\nconst _hoisted_2 = { class: \"sql-parser-section\" }\nconst _hoisted_3 = { class: \"input-group\" }\nconst _hoisted_4 = [\"disabled\"]\nconst _hoisted_5 = { class: \"logical-files-section\" }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"no-files-message\"\n}\nconst _hoisted_7 = {\n  key: 1,\n  class: \"logical-files-grid\"\n}\nconst _hoisted_8 = {\n  colspan: \"3\",\n  class: \"table-title\"\n}\nconst _hoisted_9 = { class: \"attribute-name\" }\nconst _hoisted_10 = { class: \"attribute-type\" }\nconst _hoisted_11 = { class: \"attribute-actions\" }\nconst _hoisted_12 = [\"onClick\", \"title\"]\nconst _hoisted_13 = { class: \"add-attribute-row\" }\nconst _hoisted_14 = [\"onUpdate:modelValue\"]\nconst _hoisted_15 = [\"onUpdate:modelValue\"]\nconst _hoisted_16 = [\"onClick\", \"disabled\"]\nconst _hoisted_17 = { class: \"add-logical-file-section\" }\nconst _hoisted_18 = { class: \"new-lf-form\" }\nconst _hoisted_19 = { class: \"form-row\" }\nconst _hoisted_20 = { class: \"form-group\" }\nconst _hoisted_21 = { class: \"form-row\" }\nconst _hoisted_22 = { class: \"form-group\" }\nconst _hoisted_23 = { class: \"form-group\" }\nconst _hoisted_24 = { class: \"form-actions\" }\nconst _hoisted_25 = [\"disabled\"]\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"section\", _hoisted_2, [\n      _cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"SQL Parser\", -1)),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _withDirectives(_createElementVNode(\"textarea\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.sqlInput) = $event)),\n          class: \"sql-input\",\n          placeholder: \"Copy your SQL code here...\",\n          rows: \"4\"\n        }, null, 512), [\n          [_vModelText, _ctx.sqlInput]\n        ]),\n        _createElementVNode(\"button\", {\n          onClick: _cache[1] || (_cache[1] = \n//@ts-ignore\n(...args) => (_ctx.parseSQL && _ctx.parseSQL(...args))),\n          class: \"primary-button\",\n          disabled: !_ctx.sqlInput.trim()\n        }, \" Find Logical Files \", 8, _hoisted_4)\n      ])\n    ]),\n    _createElementVNode(\"section\", _hoisted_5, [\n      _cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"Logical Files\", -1)),\n      (!_ctx.logicalFiles.length)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[7] || (_cache[7] = [\n            _createElementVNode(\"p\", null, \"No logical files found. Parse SQL code or add files manually.\", -1)\n          ])))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.logicalFiles, (lf) => {\n              return (_openBlock(), _createElementBlock(\"table\", {\n                key: lf.name,\n                class: \"logical-file-table\"\n              }, [\n                _createElementVNode(\"thead\", null, [\n                  _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", _hoisted_8, _toDisplayString(lf.name), 1)\n                  ]),\n                  _cache[8] || (_cache[8] = _createElementVNode(\"tr\", null, [\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Attribute Name\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Attribute Type\"),\n                    _createElementVNode(\"th\", { class: \"column-header\" }, \"Actions\")\n                  ], -1))\n                ]),\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lf.attributes, (attribute) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: attribute.name,\n                      class: \"attribute-row\"\n                    }, [\n                      _createElementVNode(\"td\", _hoisted_9, _toDisplayString(attribute.name), 1),\n                      _createElementVNode(\"td\", _hoisted_10, _toDisplayString(attribute.dtype), 1),\n                      _createElementVNode(\"td\", _hoisted_11, [\n                        _createElementVNode(\"button\", {\n                          onClick: ($event: any) => (_ctx.removeAttributeFromLogicalFile(lf.name, attribute.name)),\n                          class: \"danger-button small-button\",\n                          title: `Remove ${attribute.name} from ${lf.name}`\n                        }, \" Remove \", 8, _hoisted_12)\n                      ])\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", _hoisted_13, [\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.attributeInputs[lf.name].name) = $event),\n                        type: \"text\",\n                        class: \"attribute-input\",\n                        placeholder: \"Attribute Name\",\n                        maxlength: \"50\"\n                      }, null, 8, _hoisted_14), [\n                        [_vModelText, _ctx.attributeInputs[lf.name].name]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        \"onUpdate:modelValue\": ($event: any) => ((_ctx.attributeInputs[lf.name].dtype) = $event),\n                        type: \"text\",\n                        class: \"attribute-input\",\n                        placeholder: \"Attribute Type\",\n                        maxlength: \"30\"\n                      }, null, 8, _hoisted_15), [\n                        [_vModelText, _ctx.attributeInputs[lf.name].dtype]\n                      ])\n                    ]),\n                    _createElementVNode(\"td\", null, [\n                      _createElementVNode(\"button\", {\n                        onClick: ($event: any) => (_ctx.addAttributeToLogicalFile(lf.name, _ctx.attributeInputs[lf.name])),\n                        class: \"success-button small-button\",\n                        disabled: !_ctx.attributeInputs[lf.name]?.name?.trim() || !_ctx.attributeInputs[lf.name]?.dtype?.trim(),\n                        title: \"Add new attribute\"\n                      }, \" Add \", 8, _hoisted_16)\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n    ]),\n    _createElementVNode(\"section\", _hoisted_17, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"Add New Logical File\", -1)),\n      _createElementVNode(\"div\", _hoisted_18, [\n        _createElementVNode(\"div\", _hoisted_19, [\n          _createElementVNode(\"div\", _hoisted_20, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"label\", { for: \"newLfName\" }, \"Logical File Name:\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"newLfName\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((_ctx.newLogicalFileForm.name) = $event)),\n              type: \"text\",\n              class: \"form-input\",\n              placeholder: \"Enter logical file name\",\n              maxlength: \"50\"\n            }, null, 512), [\n              [_vModelText, _ctx.newLogicalFileForm.name]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_21, [\n          _createElementVNode(\"div\", _hoisted_22, [\n            _cache[11] || (_cache[11] = _createElementVNode(\"label\", { for: \"newAttributeName\" }, \"First Attribute Name:\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"newAttributeName\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((_ctx.newLogicalFileForm.attribute.name) = $event)),\n              type: \"text\",\n              class: \"form-input\",\n              placeholder: \"Enter attribute name\",\n              maxlength: \"50\"\n            }, null, 512), [\n              [_vModelText, _ctx.newLogicalFileForm.attribute.name]\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_23, [\n            _cache[12] || (_cache[12] = _createElementVNode(\"label\", { for: \"newAttributeType\" }, \"First Attribute Type:\", -1)),\n            _withDirectives(_createElementVNode(\"input\", {\n              id: \"newAttributeType\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.newLogicalFileForm.attribute.dtype) = $event)),\n              type: \"text\",\n              class: \"form-input\",\n              placeholder: \"Enter attribute type\",\n              maxlength: \"30\"\n            }, null, 512), [\n              [_vModelText, _ctx.newLogicalFileForm.attribute.dtype]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_24, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[5] || (_cache[5] = \n//@ts-ignore\n(...args) => (_ctx.createNewLogicalFile && _ctx.createNewLogicalFile(...args))),\n            class: \"primary-button\",\n            disabled: !_ctx.newLogicalFileForm.name.trim() || !_ctx.newLogicalFileForm.attribute.name.trim() || !_ctx.newLogicalFileForm.attribute.dtype.trim()\n          }, \" Add Logical File \", 8, _hoisted_25)\n        ])\n      ])\n    ])\n  ]))\n}","<!--\n/**\n * LogicalFiles Component\n * \n * A Vue component for managing Logical Files in Function Point Analysis (FPA).\n * This component allows users to:\n * - Parse SQL scripts to extract logical files and their attributes\n * - Add new logical files manually\n * - Add/remove attributes from existing logical files\n * - View all logical files in a structured table format\n * \n * @component\n * @example\n * <LogicalFiles \n *   :FPA=\"fpaInstance\" \n *   :refreshTrigger=\"refreshCounter\"\n *   @readSQL=\"handleSQLRead\" \n * />\n */\n-->\n<script lang=\"ts\">\nimport { defineComponent, ref, watch, computed, onMounted } from 'vue';\nimport { FPAnalysis, type Attribute } from '../assets/ts/LogicalFileFinder';\n\n/**\n * Interface for attribute input structure\n */\ninterface AttributeInput {\n    name: string;\n    dtype: string;\n}\n\n/**\n * Interface for component props\n */\ninterface Props {\n    FPA: FPAnalysis;\n    refreshTrigger: number;\n}\n\n/**\n * Interface for component emits\n */\ninterface Emits {\n    readSQL: [];\n}\n\nexport default defineComponent({\n    name: 'LogicalFiles',\n    props: {\n        /** Function Point Analysis instance for managing logical files */\n        FPA: {\n            type: FPAnalysis,\n            required: true\n        },\n        /** Trigger value to force component refresh from parent */\n        refreshTrigger: {\n            type: Number,\n            default: 0\n        }\n    },\n    emits: ['readSQL'],\n    setup(props: Props, { emit }) {\n        // ==========================================\n        // REACTIVE STATE\n        // ==========================================\n        \n        /** Force reactivity trigger for computed properties */\n        const forceUpdate = ref<number>(0);\n        \n        /** SQL input text for parsing */\n        const sqlInput = ref<string>('');\n        \n        /** Form data for creating new logical file */\n        const newLogicalFileForm = ref<{\n            name: string;\n            attribute: AttributeInput;\n        }>({\n            name: '',\n            attribute: { name: '', dtype: '' }\n        });\n\n        /** Input tracking for adding attributes to existing logical files */\n        const attributeInputs = ref<Record<string, AttributeInput>>({});\n\n        // ==========================================\n        // COMPUTED PROPERTIES\n        // ==========================================\n        \n        /** \n         * Computed property for logical files with forced reactivity\n         * @returns Array of logical files from FPA instance\n         */\n        const logicalFiles = computed(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            forceUpdate.value; // Trigger reactivity\n            return props.FPA.getLFs();\n        });\n\n        // ==========================================\n        // UTILITY FUNCTIONS\n        // ==========================================\n        \n        /**\n         * Initializes attribute input refs for all logical files\n         * Ensures each logical file has corresponding input fields\n         */\n        const initializeAttributeInputs = (): void => {\n            logicalFiles.value.forEach(lf => {\n                if (!attributeInputs.value[lf.name]) {\n                    attributeInputs.value[lf.name] = { name: '', dtype: '' };\n                }\n            });\n        };\n\n        /**\n         * Triggers component reactivity and initializes inputs\n         * Used after data changes to ensure UI updates\n         */\n        const triggerUpdate = (): void => {\n            forceUpdate.value++;\n            initializeAttributeInputs();\n        };\n\n        /**\n         * Resets a form object to empty values\n         * @param form - Form object to reset\n         */\n        const resetForm = (form: { name: string; attribute: AttributeInput }): void => {\n            form.name = '';\n            form.attribute.name = '';\n            form.attribute.dtype = '';\n        };\n\n        /**\n         * Clears attribute input for a specific logical file\n         * @param lfName - Name of the logical file\n         */\n        const clearAttributeInput = (lfName: string): void => {\n            if (attributeInputs.value[lfName]) {\n                attributeInputs.value[lfName].name = '';\n                attributeInputs.value[lfName].dtype = '';\n            }\n        };\n\n        // ==========================================\n        // MAIN OPERATIONS\n        // ==========================================\n\n        /**\n         * Parses SQL input and extracts logical files\n         * Updates the FPA instance with discovered logical files\n         */\n        const parseSQL = (): void => {\n            if (!sqlInput.value.trim()) {\n                console.warn('SQL input is empty');\n                return;\n            }\n\n            try {\n                props.FPA.readSQL(sqlInput.value);\n                triggerUpdate();\n                emit('readSQL');\n                console.log('Successfully parsed SQL and found logical files:', logicalFiles.value);\n            } catch (error) {\n                console.error('Error parsing SQL:', error);\n            }\n        };\n\n        /**\n         * Adds a new logical file to the FPA instance\n         * @param name - Name of the logical file\n         * @param attributes - Array of attributes for the logical file\n         */\n        const addLogicalFile = (name: string, attributes: Attribute[]): void => {\n            if (!name.trim()) {\n                console.warn('Logical file name cannot be empty');\n                return;\n            }\n\n            if (!attributes.length || !attributes[0]?.name?.trim() || !attributes[0]?.dtype?.trim()) {\n                console.warn('At least one valid attribute is required');\n                return;\n            }\n\n            try {\n                props.FPA.addLF(name.trim(), attributes);\n                attributeInputs.value[name] = { name: '', dtype: '' };\n                resetForm(newLogicalFileForm.value);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully added logical file: ${name}`);\n            } catch (error) {\n                console.error('Error adding logical file:', error);\n            }\n        };\n\n        /**\n         * Adds an attribute to an existing logical file\n         * @param lfName - Name of the logical file\n         * @param attribute - Attribute to add\n         */\n        const addAttributeToLogicalFile = (lfName: string, attribute: AttributeInput): void => {\n            if (!attribute.name.trim() || !attribute.dtype.trim()) {\n                console.warn('Attribute name and type are required');\n                return;\n            }\n\n            try {\n                props.FPA.addAttributeToLF(lfName, {\n                    name: attribute.name.trim(),\n                    dtype: attribute.dtype.trim()\n                });\n                clearAttributeInput(lfName);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully added attribute ${attribute.name} to ${lfName}`);\n            } catch (error) {\n                console.error('Error adding attribute:', error);\n            }\n        };\n\n        /**\n         * Removes an attribute from a logical file\n         * @param lfName - Name of the logical file\n         * @param attributeName - Name of the attribute to remove\n         */\n        const removeAttributeFromLogicalFile = (lfName: string, attributeName: string): void => {\n            try {\n                props.FPA.removeAttributeFromLF(lfName, attributeName);\n                triggerUpdate();\n                emit('readSQL');\n                console.log(`Successfully removed attribute ${attributeName} from ${lfName}`);\n            } catch (error) {\n                console.error('Error removing attribute:', error);\n            }\n        };\n\n        /**\n         * Creates a new logical file from the form data\n         */\n        const createNewLogicalFile = (): void => {\n            const { name, attribute } = newLogicalFileForm.value;\n            \n            if (!name.trim() || !attribute.name.trim() || !attribute.dtype.trim()) {\n                console.warn('All fields are required to create a new logical file');\n                return;\n            }\n\n            const attributes: Attribute[] = [{ ...attribute }];\n            addLogicalFile(name, attributes);\n        };\n\n        // ==========================================\n        // LIFECYCLE & WATCHERS\n        // ==========================================\n\n        /**\n         * Watches for changes in refreshTrigger prop\n         * Triggers update when parent component requests refresh\n         */\n        watch(() => props.refreshTrigger, () => {\n            triggerUpdate();\n        });\n\n        /**\n         * Component initialization\n         */\n        onMounted(() => {\n            initializeAttributeInputs();\n        });\n\n        // ==========================================\n        // TEMPLATE EXPORTS\n        // ==========================================\n\n        return {\n            // Computed\n            logicalFiles,\n            \n            // Reactive state\n            sqlInput,\n            newLogicalFileForm,\n            attributeInputs,\n            \n            // Methods\n            parseSQL,\n            createNewLogicalFile,\n            addAttributeToLogicalFile,\n            removeAttributeFromLogicalFile,\n            \n            // Utilities (exposed for template debugging)\n            triggerUpdate\n        };\n    },\n});\n</script>\n\n<template>\n    <div class=\"logical-files-container\">\n        <!-- SQL Parser Section -->\n        <section class=\"sql-parser-section\">\n            <h2>SQL Parser</h2>\n            <div class=\"input-group\">\n                <textarea \n                    v-model=\"sqlInput\" \n                    class=\"sql-input\"\n                    placeholder=\"Copy your SQL code here...\"\n                    rows=\"4\"\n                />\n                <button \n                    @click=\"parseSQL\" \n                    class=\"primary-button\"\n                    :disabled=\"!sqlInput.trim()\"\n                >\n                    Find Logical Files\n                </button>\n            </div>\n        </section>\n\n        <!-- Logical Files Display Section -->\n        <section class=\"logical-files-section\">\n            <h2>Logical Files</h2>\n            \n            <!-- Display message when no logical files exist -->\n            <div v-if=\"!logicalFiles.length\" class=\"no-files-message\">\n                <p>No logical files found. Parse SQL code or add files manually.</p>\n            </div>\n\n            <!-- Logical Files Tables -->\n            <div v-else class=\"logical-files-grid\">\n                <table \n                    v-for=\"lf in logicalFiles\" \n                    :key=\"lf.name\" \n                    class=\"logical-file-table\"\n                >\n                    <!-- Table Header -->\n                    <thead>\n                        <tr>\n                            <th colspan=\"3\" class=\"table-title\">\n                                {{ lf.name }}\n                            </th>\n                        </tr>\n                        <tr>\n                            <th class=\"column-header\">Attribute Name</th>\n                            <th class=\"column-header\">Attribute Type</th>\n                            <th class=\"column-header\">Actions</th>\n                        </tr>\n                    </thead>\n\n                    <!-- Table Body -->\n                    <tbody>\n                        <!-- Existing Attributes -->\n                        <tr \n                            v-for=\"attribute in lf.attributes\" \n                            :key=\"attribute.name\"\n                            class=\"attribute-row\"\n                        >\n                            <td class=\"attribute-name\">{{ attribute.name }}</td>\n                            <td class=\"attribute-type\">{{ attribute.dtype }}</td>\n                            <td class=\"attribute-actions\">\n                                <button \n                                    @click=\"removeAttributeFromLogicalFile(lf.name, attribute.name)\"\n                                    class=\"danger-button small-button\"\n                                    :title=\"`Remove ${attribute.name} from ${lf.name}`\"\n                                >\n                                    Remove\n                                </button>\n                            </td>\n                        </tr>\n\n                        <!-- Add New Attribute Row -->\n                        <tr class=\"add-attribute-row\">\n                            <td>\n                                <input \n                                    v-model=\"attributeInputs[lf.name].name\" \n                                    type=\"text\"\n                                    class=\"attribute-input\"\n                                    placeholder=\"Attribute Name\"\n                                    maxlength=\"50\"\n                                />\n                            </td>\n                            <td>\n                                <input \n                                    v-model=\"attributeInputs[lf.name].dtype\"\n                                    type=\"text\" \n                                    class=\"attribute-input\"\n                                    placeholder=\"Attribute Type\"\n                                    maxlength=\"30\"\n                                />\n                            </td>\n                            <td>\n                                <button \n                                    @click=\"addAttributeToLogicalFile(lf.name, attributeInputs[lf.name])\"\n                                    class=\"success-button small-button\"\n                                    :disabled=\"!attributeInputs[lf.name]?.name?.trim() || !attributeInputs[lf.name]?.dtype?.trim()\"\n                                    title=\"Add new attribute\"\n                                >\n                                    Add\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </section>\n\n        <!-- Add New Logical File Section -->\n        <section class=\"add-logical-file-section\">\n            <h2>Add New Logical File</h2>\n            <div class=\"new-lf-form\">\n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"newLfName\">Logical File Name:</label>\n                        <input \n                            id=\"newLfName\"\n                            v-model=\"newLogicalFileForm.name\" \n                            type=\"text\"\n                            class=\"form-input\"\n                            placeholder=\"Enter logical file name\"\n                            maxlength=\"50\"\n                        />\n                    </div>\n                </div>\n                \n                <div class=\"form-row\">\n                    <div class=\"form-group\">\n                        <label for=\"newAttributeName\">First Attribute Name:</label>\n                        <input \n                            id=\"newAttributeName\"\n                            v-model=\"newLogicalFileForm.attribute.name\" \n                            type=\"text\"\n                            class=\"form-input\"\n                            placeholder=\"Enter attribute name\"\n                            maxlength=\"50\"\n                        />\n                    </div>\n                    \n                    <div class=\"form-group\">\n                        <label for=\"newAttributeType\">First Attribute Type:</label>\n                        <input \n                            id=\"newAttributeType\"\n                            v-model=\"newLogicalFileForm.attribute.dtype\" \n                            type=\"text\"\n                            class=\"form-input\"\n                            placeholder=\"Enter attribute type\"\n                            maxlength=\"30\"\n                        />\n                    </div>\n                </div>\n                \n                <div class=\"form-actions\">\n                    <button \n                        @click=\"createNewLogicalFile\"\n                        class=\"primary-button\"\n                        :disabled=\"!newLogicalFileForm.name.trim() || !newLogicalFileForm.attribute.name.trim() || !newLogicalFileForm.attribute.dtype.trim()\"\n                    >\n                        Add Logical File\n                    </button>\n                </div>\n            </div>\n        </section>\n    </div>\n</template>\n\n<style scoped>\n@import '../assets/color_palette.css';\n\n/* ==========================================\n   LAYOUT & CONTAINER STYLES\n   ========================================== */\n\n.logical-files-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\n.logical-files-container section {\n    margin-bottom: 30px;\n    padding: 20px;\n    background-color: var(--color-white-cream);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.logical-files-container h2 {\n    color: var(--color-gray);\n    margin-bottom: 15px;\n    padding-bottom: 10px;\n    border-bottom: 2px solid var(--color-green);\n    font-size: 1.5em;\n    font-weight: 600;\n}\n\n/* ==========================================\n   SQL PARSER SECTION\n   ========================================== */\n\n.sql-parser-section {\n    border-left: 4px solid var(--color-green);\n}\n\n.input-group {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.sql-input {\n    width: 100%;\n    padding: 12px;\n    border: 2px solid var(--color-gray);\n    border-radius: 6px;\n    font-family: 'Courier New', monospace;\n    font-size: 14px;\n    resize: vertical;\n    min-height: 100px;\n    transition: border-color 0.3s ease;\n}\n\n.sql-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   LOGICAL FILES SECTION\n   ========================================== */\n\n.logical-files-section {\n    border-left: 4px solid var(--color-yellow);\n}\n\n.no-files-message {\n    text-align: center;\n    padding: 40px 20px;\n    color: var(--color-gray);\n    font-style: italic;\n}\n\n.logical-files-grid {\n    display: grid;\n    gap: 20px;\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n}\n\n/* ==========================================\n   TABLE STYLES\n   ========================================== */\n\n.logical-file-table {\n    width: 100%;\n    border-collapse: collapse;\n    background-color: var(--color-white-cream);\n    border: 2px solid var(--color-gray);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.logical-file-table th,\n.logical-file-table td {\n    padding: 12px;\n    text-align: left;\n    vertical-align: middle;\n    border-bottom: 1px solid #e0e0e0;\n}\n\n.table-title {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    font-weight: bold;\n    font-size: 1.2em;\n    text-align: center;\n    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.column-header {\n    background-color: var(--color-yellow);\n    color: var(--color-gray);\n    font-weight: 600;\n    text-transform: uppercase;\n    font-size: 0.9em;\n    letter-spacing: 0.5px;\n}\n\n.attribute-row:hover {\n    background-color: #f8f9fa;\n}\n\n.attribute-name {\n    font-family: 'Courier New', monospace;\n    font-weight: 500;\n}\n\n.attribute-type {\n    font-family: 'Courier New', monospace;\n    color: #666;\n    font-style: italic;\n}\n\n.attribute-actions {\n    text-align: center;\n}\n\n.add-attribute-row {\n    background-color: #f0f8f0;\n    border-top: 2px solid var(--color-green);\n}\n\n.attribute-input {\n    width: 100%;\n    padding: 8px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.attribute-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 2px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n/* ==========================================\n   ADD LOGICAL FILE SECTION\n   ========================================== */\n\n.add-logical-file-section {\n    border-left: 4px solid #3498db;\n}\n\n.new-lf-form {\n    background-color: #f8f9fa;\n    padding: 20px;\n    border-radius: 6px;\n    border: 1px solid #e9ecef;\n}\n\n.form-row {\n    display: flex;\n    gap: 20px;\n    margin-bottom: 20px;\n    align-items: end;\n}\n\n.form-group {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n.form-group label {\n    font-weight: 500;\n    color: var(--color-gray);\n    font-size: 0.9em;\n}\n\n.form-input {\n    padding: 10px;\n    border: 2px solid #ddd;\n    border-radius: 4px;\n    font-size: 14px;\n    transition: border-color 0.3s ease;\n}\n\n.form-input:focus {\n    outline: none;\n    border-color: var(--color-green);\n    box-shadow: 0 0 0 3px rgba(var(--color-green-rgb, 0, 128, 0), 0.1);\n}\n\n.form-actions {\n    display: flex;\n    justify-content: flex-end;\n    gap: 10px;\n}\n\n/* ==========================================\n   BUTTON STYLES\n   ========================================== */\n\n.primary-button,\n.success-button,\n.danger-button {\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    font-weight: 500;\n    transition: all 0.3s ease;\n    text-transform: uppercase;\n    letter-spacing: 0.5px;\n    font-size: 0.9em;\n}\n\n.primary-button {\n    background: linear-gradient(135deg, var(--color-green), #45a049);\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n}\n\n.primary-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #45a049, var(--color-green));\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.success-button {\n    background: linear-gradient(135deg, #28a745, #20c997);\n    color: white;\n}\n\n.success-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #20c997, #28a745);\n    transform: translateY(-1px);\n}\n\n.danger-button {\n    background: linear-gradient(135deg, #dc3545, #e74c3c);\n    color: white;\n}\n\n.danger-button:hover:not(:disabled) {\n    background: linear-gradient(135deg, #e74c3c, #dc3545);\n    transform: translateY(-1px);\n}\n\n.small-button {\n    padding: 6px 12px;\n    font-size: 0.8em;\n}\n\nbutton:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none !important;\n    box-shadow: none !important;\n}\n\n/* ==========================================\n   RESPONSIVE DESIGN\n   ========================================== */\n\n@media (max-width: 768px) {\n    .logical-files-container {\n        padding: 10px;\n    }\n    \n    .logical-files-grid {\n        grid-template-columns: 1fr;\n    }\n    \n    .form-row {\n        flex-direction: column;\n        gap: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.9em;\n    }\n    \n    .logical-file-table th,\n    .logical-file-table td {\n        padding: 8px;\n    }\n}\n\n@media (max-width: 480px) {\n    .logical-files-container section {\n        padding: 15px;\n    }\n    \n    .logical-file-table {\n        font-size: 0.8em;\n    }\n    \n    .attribute-input {\n        font-size: 12px;\n    }\n    \n    .primary-button,\n    .success-button,\n    .danger-button {\n        padding: 8px 16px;\n        font-size: 0.8em;\n    }\n}\n\n/* ==========================================\n   ACCESSIBILITY IMPROVEMENTS\n   ========================================== */\n\n@media (prefers-reduced-motion: reduce) {\n    * {\n        transition: none !important;\n        animation: none !important;\n    }\n}\n\n.sr-only {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n}\n</style>","// Parte do programa dedicada a identificar tabelas e colunas presentes no SQL.\n// A ideia é poder expandir para leitura de outros bancos SQL além do SQLite e para outras formas de contagem no futuro.\nconst sqlScript = `\nCREATE TABLE IF NOT EXISTS \"Mensagem_Inicial\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Texto\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"Nome_da_categoria\" TEXT,\n    PRIMARY KEY(\"id\")\n);\nCREATE TABLE IF NOT EXISTS \"Mensagem_da_categoria\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"ID_Categoria\" INTEGER,\n    \"Texto\" TEXT,\n    \"Resposta\" TEXT,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"id\") REFERENCES \"Categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\nCREATE TABLE IF NOT EXISTS \"Acao\" (\n    \"id\" INTEGER NOT NULL UNIQUE,\n    \"tipo\" TEXT,\n    \"Valor\" TEXT,\n    \"Mensagem\" INTEGER,\n    PRIMARY KEY(\"id\"),\n    FOREIGN KEY (\"Mensagem\") REFERENCES \"Mensagem_da_categoria\"(\"id\")\n    ON UPDATE NO ACTION ON DELETE NO ACTION\n);\n`;\nconst logicalFiles = {};\n\nexport enum EPType {\n    ExternalInput = \"External Input\",\n    ExternalOutput = \"External Output\",\n    ExternalInquiry = \"External Inquiry\"\n}\n\nexport interface Attribute {\n    name: string;\n    dtype: string;\n}\n\nexport interface LogicalFile{\n    name: string;\n    attributes: Attribute[];\n}\n\nexport interface ElementaryProcess {\n    description: string;\n    type: EPType;\n    referencedLFs: LogicalFile[]; // TODO - Verificar se é necessário apentar para os atributos ou apenas os nomes.\n\n}\n\n// Regex para capturar tabelas\nconst tableRegex = /CREATE TABLE IF NOT EXISTS\\s+\"([\\w_]+)\"\\s*\\(([\\s\\S]+?)\\);/g;\n\n// Regex para capturar colunas dentro da definição da tabela\nconst columnRegex = /\"([\\w_]+)\"\\s+([\\w]+)/g;\n\n\n\nexport class FPAnalysis{\n    private logicalFiles: LogicalFile[] = [];\n    private elementaryProcesses: ElementaryProcess[] = [];\n    /*constructor(){\n    }*/\n\n    /**\n     * Parses the SQL script and extracts table names and their columns.\n     * *Resets the logicalFiles array before parsing.\n     */\n    public readSQL(sql: string): void{\n        this.logicalFiles = [];\n        let matchTable;\n\n        while ((matchTable = tableRegex.exec(sql)) !== null) {\n            const tableContent = matchTable[2].toString();\n            this.logicalFiles.push({\n                name: matchTable[1].toString(),\n                attributes: []\n            });\n\n            let matchColumn;\n            while ((matchColumn = columnRegex.exec(tableContent)) !== null) {\n                this.logicalFiles[this.logicalFiles.length - 1].attributes.push(\n                    {\n                        name: matchColumn[1].toString(),\n                        dtype: matchColumn[2].toString()\n                    }\n                );\n            }\n        }\n    }\n\n    /**\n     * Adds a Logical File (LF) to the analysis.\n     * @param name - The name of the Logical File.\n     * @param attributes - An array of attributes for the Logical File.\n     */\n    public addLF(name: string, attributes: Attribute[]): void {\n        // Verifica se já existe um LF com o mesmo nome\n        if (this.logicalFiles.some(lf => lf.name === name)) {\n            console.warn(`Logical File with name \"${name}\" already exists. Skipping addition.`);\n            return;\n        }\n\n        this.logicalFiles.push({\n            name: name,\n            attributes: attributes\n        });\n    }\n\n    /**\n     * Adds an attribute to an existing Logical File (LF).\n     * @param lfName - The name of the Logical File to which the attribute will be added.\n     * @param attribute - The attribute to be added.\n     */\n    public addAttributeToLF(lfName: string, attribute: Attribute): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verifica se o LF existe\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot add attribute.`);\n            return;\n        }\n\n        // Verifica se o atributo já existe\n        if (lf.attributes.some(attr => attr.name === attribute.name)) {\n            console.warn(`Attribute \"${attribute.name}\" already exists in Logical File \"${lfName}\". Skipping addition.`);\n            return;\n        }\n\n        lf.attributes.push(attribute);\n    }\n\n    /**\n     * Removes a Logical File (LF) from the analysis.\n     * @param name - The name of the Logical File to remove.\n     */\n    public removeLF(name: string): void {\n        // Goes through all the Elementary Processes and removes any reference to the LF being removed\n        this.elementaryProcesses.forEach(ep => {\n            ep.referencedLFs = ep.referencedLFs.filter(lf => lf.name !== name);\n        });\n\n        // Removes the Logical File from the logicalFiles array\n        this.logicalFiles = this.logicalFiles.filter(lf => lf.name !== name);\n    }\n\n    \n    /**\n     * Removes an attribute from a Logical File (LF).\n     * @param lfName - The name of the Logical File from which the attribute will be removed.\n     * @param attributeName - The name of the attribute to be removed.\n     */\n    public removeAttributeFromLF(lfName: string, attributeName: string): void {\n        const lf = this.logicalFiles.find(lf => lf.name === lfName);\n\n        // Verify if the Logical File exists\n        if (!lf) {\n            console.error(`Logical File \"${lfName}\" not found. Cannot remove attribute.`);\n            return;\n        }\n\n        // Update the Elementary Processes to remove references to the attribute\n        this.elementaryProcesses.forEach(ep => {\n            ep.referencedLFs.forEach(refLF => {\n                if (refLF.name === lfName) {\n                    refLF.attributes = refLF.attributes.filter(attr => attr.name !== attributeName);\n                }\n            });\n        });\n\n        // Remove the attribute from the Logical File\n        lf.attributes = lf.attributes.filter(attr => attr.name !== attributeName);\n    }\n\n    /**\n     * Retrieves the list of Logical Files (LFs).\n     * @returns An array of Logical Files.\n     */\n    public getLFs(){\n        return this.logicalFiles;\n    }\n\n    /**\n     * Adds an Elementary Process (EP) to the analysis.\n     * @param description - A description of the Elementary Process.\n     * @param type - The type of the Elementary Process (External Input, External Output, or External Inquiry).\n     * @param logicalFiles - An array of Logical Files referenced by the Elementary Process.\n     */\n    public addEP(description: string, type: EPType, logicalFiles: LogicalFile[]): void{\n        // Verify if there is already an Elementary Process with the same description\n        if (this.elementaryProcesses.some(ep => ep.description === description)) {\n            console.warn(`Elementary Process with description \"${description}\" already exists. Skipping addition.`);\n            return;\n        }\n\n        // Verify if the referenced Logical Files and Attributes exist\n        for (const lf of logicalFiles) {\n            if (!this.logicalFiles.some(existingLF => existingLF.name === lf.name)) {\n                console.error(`Logical File \"${lf.name}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                return;\n            }\n            for (const attr of lf.attributes) {\n                if (!this.logicalFiles.find(existingLF => existingLF.name === lf.name)?.attributes.some(existingAttr => existingAttr.name === attr.name)) {\n                    console.error(`Attribute \"${attr.name}\" in Logical File \"${lf.name}\" referenced in Elementary Process \"${description}\" does not exist.`);\n                    return;\n                }\n            }\n        }\n\n        this.elementaryProcesses.push({\n            description: description,\n            type: type,\n            referencedLFs: logicalFiles\n        });\n    }\n    /*\n    public removeEP(){};\n\n    public evaluateFPs(){};*/\n}","import { render } from \"./LogicalFiles.vue?vue&type=template&id=0be7e95c&scoped=true&ts=true\"\nimport script from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\nexport * from \"./LogicalFiles.vue?vue&type=script&lang=ts\"\n\nimport \"./LogicalFiles.vue?vue&type=style&index=0&id=0be7e95c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0be7e95c\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=5ea72888&ts=true\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5ea72888&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport './registerServiceWorker'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunksimple_fpa\"] = self[\"webpackChunksimple_fpa\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6023); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_hoisted_1","id","_hoisted_2","class","_hoisted_3","key","_hoisted_4","render","_ctx","_cache","$props","$setup","$data","$options","_component_LogicalFiles","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","_createVNode","FPA","fpaInstance","refreshTrigger","refreshCounter","onReadSQL","handleLogicalFilesUpdate","showDebugInfo","_toDisplayString","currentLogicalFiles","length","JSON","stringify","lastUpdateTime","totalAttributes","_createCommentVNode","onClick","args","toggleDebugInfo","_normalizeClass","active","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","colspan","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_withDirectives","$event","sqlInput","placeholder","rows","_vModelText","parseSQL","disabled","trim","logicalFiles","_Fragment","_renderList","lf","name","attributes","attribute","dtype","removeAttributeFromLogicalFile","title","attributeInputs","type","maxlength","addAttributeToLogicalFile","for","newLogicalFileForm","createNewLogicalFile","EPType","tableRegex","columnRegex","FPAnalysis","constructor","_defineProperty","readSQL","sql","matchTable","this","exec","tableContent","toString","matchColumn","push","addLF","some","console","warn","addAttributeToLF","lfName","find","attr","error","removeLF","elementaryProcesses","forEach","ep","referencedLFs","filter","removeAttributeFromLF","attributeName","refLF","getLFs","addEP","description","existingLF","existingAttr","defineComponent","props","required","Number","default","emits","setup","emit","forceUpdate","ref","computed","value","initializeAttributeInputs","triggerUpdate","resetForm","form","clearAttributeInput","log","addLogicalFile","watch","onMounted","__exports__","components","LogicalFiles","reduce","total","Date","toLocaleTimeString","loadSampleData","sampleSQL","newFiles","oldFiles","previous","current","difference","deep","register","ready","registered","cached","updatefound","updated","offline","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}